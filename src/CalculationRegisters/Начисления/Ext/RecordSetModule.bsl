#Область ПрограммныйИнтерфейс

Функция РассчитатьСуммуНачисления() Экспорт
    значенияМодифицированы = Ложь;

    Для Каждого движение Из ЭтотОбъект Цикл
        результатРасчета = получитьСуммуНачисления(движение);

        Если результатРасчета.Успех Тогда
            Если НЕ значенияМодифицированы И движение.Сумма <> результатРасчета.Сумма Тогда
                значенияМодифицированы = Истина;
            КонецЕсли;

            движение.Сумма = результатРасчета.Сумма;
        Иначе
            ДиагностикаКлиентСервер.Утверждение(ТипЗнч(результатРасчета.Сообщение) = Тип("Строка")
                    И ЗначениеЗаполнено(результатРасчета.Сообщение),
                    "Текст сообщения об ошибке должен быть заполнен.");

            сообщение = Новый СообщениеПользователю;
            сообщение.Текст = результатРасчета.Сообщение;
            сообщение.Сообщить();
        КонецЕсли;
    КонецЦикла;

    Если значенияМодифицированы Тогда
        ЭтотОбъект.Записать( , Истина);
    КонецЕсли;

    Возврат значенияМодифицированы;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция получитьСуммуНачисления(Знач движение)
    результатРасчета = Новый Структура("Сумма, Успех, Сообщение", 0, Ложь, Неопределено);

    Если движение.ВидРасчета = ПланыВидовРасчета.Начисления.Оклад Тогда
        оклад = движение.ПоказательРасчета;
        отработаноЧасов = движение.ПолучитьДанныеГрафика(ВидПериодаРегистраРасчета.ФактическийПериодДействия).Итог("КоличествоЧасов");
        нормаЧасов = движение.ПолучитьДанныеГрафика(ВидПериодаРегистраРасчета.ПериодДействия).Итог("КоличествоЧасов");
        результатРасчета.Сумма = оклад * отработаноЧасов / нормаЧасов;
        результатРасчета.Успех = Истина;
    ИначеЕсли движение.ВидРасчета = ПланыВидовРасчета.Начисления.Больничный ИЛИ движение.ВидРасчета.Предопределенный = Ложь Тогда
        результатРасчета.Сумма = 0;
    Иначе
        результатРасчета.Сообщение = СтрШаблон("Для вида расчета %1 не задана формула расчета!", движение.ВидРасчета);
    КонецЕсли;

    Возврат результатРасчета;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
