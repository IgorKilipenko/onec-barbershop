#Область ОписаниеПеременных

&НаКлиенте
Перем _ПланСчетов;

&НаКлиенте
Перем _ТипыНоменклатуры;

#КонецОбласти // ОписанияПеременных

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(_, __)
    Если НЕ Объект.Ссылка.Пустая() Тогда
        ЭтотОбъект.ТекущаяРозничнаяЦена = РаботаСЦенамиВызовСервера.ПолучитьЦенуПродажиНаДату(Объект.Ссылка);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(_)
    _ТипыНоменклатуры = получитьТипыНоменклатурыНаСервере();
    _ПланСчетов = получитьЗначенияПланаСчетовНаСервере();

    установитьВидимостьПолейФормы();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипНоменклатурыПриИзменении(_)
    установитьВидимостьПолейФормы();
КонецПроцедуры

&НаКлиенте
Процедура СчетБухгалтерскогоУчетаНачалоВыбора(_, данныеВыбора, __, стандартнаяОбработка)
    стандартнаяОбработка = Ложь;

    списокДоступныхЗначений = Новый СписокЗначений;
    Если Объект.ТипНоменклатуры = _ТипыНоменклатуры.Товар Тогда
        списокДоступныхЗначений.Добавить(_ПланСчетов.Материалы);
        списокДоступныхЗначений.Добавить(_ПланСчетов.Товары);
    ИначеЕсли Объект.ТипНоменклатуры = _ТипыНоменклатуры.Услуга Тогда
        списокДоступныхЗначений.Добавить(_ПланСчетов.РасходыНаПродажу);
        списокДоступныхЗначений.Добавить(_ПланСчетов.ПрочиеДоходыИРасходы);
    Иначе
        списокДоступныхЗначений.Добавить(_ПланСчетов.ПустаяСсылка);
    КонецЕсли;

    данныеВыбора = списокДоступныхЗначений;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьЦену(_)

    Если Объект.Ссылка.Пустая() Тогда
        сообщение_ = Новый СообщениеПользователю();
        сообщение_.Текст = "Перед установкой цены необходимо записать документ!";
        сообщение_.Сообщить();
    Иначе
        открытьФормуИзменениеЦены();
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура открытьФормуИзменениеЦены()
    ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСозданияЦены",
        Новый Структура("Номенклатура", Объект.Ссылка), , , , ,
        Новый ОписаниеОповещения("_послеИзмененияЦены_ОВ", ЭтотОбъект),
        РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура установитьВидимостьПолейФормы()
    Элементы.ДлительностьУслуги.Видимость = этоУслуга();
    Объект.ДлительностьУслуги = ?(Элементы.ДлительностьУслуги.Видимость, Объект.ДлительностьУслуги, 0);
КонецПроцедуры

&НаКлиенте
Функция этоУслуга()
    Возврат Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга");
КонецФункции

&НаСервереБезКонтекста
Функция получитьТипыНоменклатурыНаСервере()
    Возврат Справочники.Номенклатура.ПолучитьТипыНоменклатуры();
КонецФункции

&НаСервереБезКонтекста
Функция получитьЗначенияПланаСчетовНаСервере()
    Возврат ПланыСчетов.Хозрасчетный.ПолучитьЗначенияПланаСчетов();
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
Процедура _послеИзмененияЦены_ОВ(_, __) Экспорт
    ЭтотОбъект.ТекущаяРозничнаяЦена = РаботаСЦенамиВызовСервера.ПолучитьЦенуПродажиНаДату(Объект.Ссылка);
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
