#Область ПрограммныйИнтерфейс

// Параметры:
//  табДокПрайсЛиста - ТабличныйДокумент
// Возвращаемое значение:
//  ТаблицаЗначений
Функция ПолучитьТаблицуЗначенийИзТабличногоДокумента(Знач табДокПрайсЛиста) Экспорт

    таблицаПрайсЛиста = Новый ТаблицаЗначений;

    таблицаПрайсЛиста.Колонки.Добавить("АртикулНоменклатуры", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(13)));
    таблицаПрайсЛиста.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));

    количествоСтрок = табДокПрайсЛиста.ВысотаТаблицы;
    Если количествоСтрок = 0 Тогда
        Возврат таблицаПрайсЛиста;
    КонецЕсли;

    содержитАртикул = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(
            табДокПрайсЛиста.ПолучитьОбласть("R1C1").ТекущаяОбласть.Текст, "\.*[Аа]ртикул\.*");
    содержитЦену = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(
            табДокПрайсЛиста.ПолучитьОбласть("R1C2").ТекущаяОбласть.Текст, "\.*[Цц]ена\.*");
    содержитШапку = содержитАртикул ИЛИ содержитЦену;

    Для сч = ?(содержитШапку, 2, 1) По количествоСтрок Цикл
        стрНомерСтроки = Формат(сч, "ЧГ=0");
        новаяСтрокаПрайса = таблицаПрайсЛиста.Добавить();

        артикулНоменклатуры = Строка(
                табДокПрайсЛиста.ПолучитьОбласть(СтрШаблон("R%1C1", стрНомерСтроки)).ТекущаяОбласть.Текст);
        ценаНоменклатуры = ПреобразованиеТиповКлиентСервер.ПривестиСтрокуКЧислу(
                табДокПрайсЛиста.ПолучитьОбласть(СтрШаблон("R%1C2", стрНомерСтроки)).ТекущаяОбласть.Текст, Истина);

        Если ценаНоменклатуры = Неопределено Тогда
            ВызватьИсключение СтрШаблон("Ошибка чтения значения цены в строке %1", стрНомерСтроки);
        КонецЕсли;

        новаяСтрокаПрайса.АртикулНоменклатуры = артикулНоменклатуры;
        новаяСтрокаПрайса.Цена = ценаНоменклатуры;
    КонецЦикла;

    Возврат таблицаПрайсЛиста;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция получитьОбластиДанныхПрайсЛиста(Знач табДокПрайсЛиста)
    результат = Новый Структура;
    результат.Вставить("КоличествоСтрок", табДокПрайсЛиста.ВысотаТаблицы);
    результат.Вставить("КоличествоСтолбцов", табДокПрайсЛиста.ШиринаТаблицы);
    //областьДанныхТД = табДокПрайсЛиста.Область(1, 1, ПоследняяСтрока, ПоследняяКолонка);

    областьАртикул = Неопределено;
    областьЦена = Неопределено;
    Для номерСтроки = 1 По результат.КоличествоСтрок Цикл
        Для номерСтолбца = 1 По результат.КоличествоСтолбцов Цикл
            текстЯчейки = табДокПрайсЛиста.Область(номерСтроки, номерСтолбца).Текст;
            этоАртикул = Ложь;
            этоЦена = Ложь;
            Если областьАртикул = Неопределено Тогда
                этоАртикул = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(текстЯчейки, "\.*[Аа]ртикул\.*");
                Если этоАртикул Тогда
                    областьАртикул = табДокПрайсЛиста.Область(номерСтроки, номерСтолбца, номерСтроки, результат.КоличествоСтолбцов);
                КонецЕсли;
            КонецЕсли;
            Если областьЦена = Неопределено И НЕ этоАртикул Тогда
                этоЦена = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(текстЯчейки, "\.*[Аа]ртикул\.*");
                Если этоЦена Тогда
                    областьАртикул = табДокПрайсЛиста.Область(номерСтроки, номерСтолбца, номерСтроки, результат.КоличествоСтолбцов);
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
    КонецЦикла;

КонецФункции

// Возвращаемое значение;
//  - Структура:
//      * ШаблонПоиска - Строка
//      * АдресЯчейки - Неопределено, Структура:
//          ** Строка - Число
//          ** Столбец - Число
Функция найтиПозициюСтолбцовПрайсЛиста()
    искомыеСтолбцы = Новый Структура;
    искомыеСтолбцы_Ключи = "Имя, АдресЯчейки, ШаблонПоиска";
    искомыеСтолбцы.Вставить("Артикул", Новый Структура(искомыеСтолбцы_Ключи, "\.*[Аа]ртикул\.*"));
    искомыеСтолбцы.Добавить("Цена", Новый Структура(искомыеСтолбцы_Ключи, "\.*[Цц]ена[аы]\.*"));

    найденныеСтолбцы = Новый Структура;
    диапазонОбластиЗаголовков = Новый Структура;
    диапазонОбластиЗаголовков.Вставить("ПерваяСтрокаДанных", Неопределено);
    диапазонОбластиЗаголовков.Вставить("ПоследняяСтрокаДанных", Неопределено);
    диапазонОбластиЗаголовков.Вставить("ПервыйСтолбецДанных", Неопределено);
    диапазонОбластиЗаголовков.Вставить("ПоследнийСтолбецДанных", Неопределено);

    результат = Новый Структура;
    результат.Вставить("Столбцы, ДиапазонОбластиЗаголовков", найденныеСтолбцы, диапазонОбластиЗаголовков);

    Для номерСтроки = 1 По результат.КоличествоСтрок Цикл // Для каждой строки
        Для номерСтолбца = 1 По результат.КоличествоСтолбцов Цикл // Для каждого столбца

            // Поиск искомых столбцов в текущей ячейке
            текстЯчейки = табДокПрайсЛиста.Область(номерСтроки, номерСтолбца).Текст;
            Для Каждого искомыйСтолбецКЗ Из искомыеСтолбцы Цикл
                искомыйСтолбец = искомыйСтолбецКЗ.Значение;

                этоПустаяСтрока = этоПустаяСтрока И РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(текстЯчейки, "\s*");
                Если искомыйСтолбец.АдресЯчейки = Неопределено Тогда // Столбец найден ранее
                    Продолжить; // Переход к обработке следующего искомого столбца для текущей ячейки
                КонецЕсли;

                этоИскомыйСтолбец = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(
                        текстЯчейки, искомыйСтолбец.ШаблонПоиска);
                Если этоИскомыйСтолбец Тогда
                    искомыйСтолбец.АдресЯчейки = Новый Структура("Строка, Столбец", номерСтроки, номерСтолбца);
                    найденныеСтолбцы.Добавить(искомыйСтолбецКЗ.Ключ, искомыйСтолбец);
                    Прервать; // Переход к обработке следующей ячейки строки
                КонецЕсли;
            КонецЦикла;
        КонецЦикла;

        диапазонОбластиЗаголовков.ПоследняяСтрокаДанных = номерСтроки;
        Если найденныеСтолбцы.Количество() = искомыеСтолбцы.Количество() Тогда
            Прервать; // Завершение цикла обхода строк - т.к. все значения найдены
        КонецЕсли;
    КонецЦикла;

    // Инициализация диапазона области заголовков
    Если найденныеСтолбцы.Количество() = 0 Тогда
        диапазонОбластиЗаголовков.ПоследняяСтрокаДанных = Неопределено;
        Возврат результат; // Нет найденных столбцов
    Иначе
        диапазонОбластиЗаголовков.ПерваяСтрокаДанных = 1;
        диапазонОбластиЗаголовков.ПервыйСтолбецДанных = 1;
    КонецЕсли;

    Для Каждого столбецКЗ Из найденныеСтолбцы Цикл
        диапазонОбластиЗаголовков.ПерваяСтрокаДанных =
            Макс(диапазонОбластиЗаголовков.ПерваяСтрокаДанных, столбецКЗ.Значение.АдресЯчейки.Строка);
        диапазонОбластиЗаголовков.ПервыйСтолбецДанных =
            Мин(диапазонОбластиЗаголовков.ПервыйСтолбецДанных, столбецКЗ.Значение.АдресЯчейки.Столбец);
    КонецЦикла;
    Возврат результат;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
