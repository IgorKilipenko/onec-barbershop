#Область ПрограммныйИнтерфейс

// Параметры:
//  табДокПрайсЛиста - ТабличныйДокумент
// Возвращаемое значение:
//  ТаблицаЗначений
Функция ПолучитьТаблицуЗначенийИзТабличногоДокумента(Знач табДокПрайсЛиста) Экспорт

    таблицаПрайсЛиста = Новый ТаблицаЗначений;

    таблицаПрайсЛиста.Колонки.Добавить("АртикулНоменклатуры", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(13)));
    таблицаПрайсЛиста.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));

    количествоСтрок = табДокПрайсЛиста.ВысотаТаблицы;
    Если количествоСтрок = 0 Тогда
        Возврат таблицаПрайсЛиста;
    КонецЕсли;

    содержитАртикул = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(
            табДокПрайсЛиста.ПолучитьОбласть("R1C1").ТекущаяОбласть.Текст, "\.*[Аа]ртикул\.*");
    содержитЦену = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(
            табДокПрайсЛиста.ПолучитьОбласть("R1C2").ТекущаяОбласть.Текст, "\.*[Цц]ена\.*");
    содержитШапку = содержитАртикул ИЛИ содержитЦену;

    Для сч = ?(содержитШапку, 2, 1) По количествоСтрок Цикл
        стрНомерСтроки = Формат(сч, "ЧГ=0");
        новаяСтрокаПрайса = таблицаПрайсЛиста.Добавить();

        артикулНоменклатуры = Строка(
                табДокПрайсЛиста.ПолучитьОбласть(СтрШаблон("R%1C1", стрНомерСтроки)).ТекущаяОбласть.Текст);
        ценаНоменклатуры = ПреобразованиеТиповКлиентСервер.ПривестиСтрокуКЧислу(
                табДокПрайсЛиста.ПолучитьОбласть(СтрШаблон("R%1C2", стрНомерСтроки)).ТекущаяОбласть.Текст, Истина);

        Если ценаНоменклатуры = Неопределено Тогда
            ВызватьИсключение СтрШаблон("Ошибка чтения значения цены в строке %1", стрНомерСтроки);
        КонецЕсли;

        новаяСтрокаПрайса.АртикулНоменклатуры = артикулНоменклатуры;
        новаяСтрокаПрайса.Цена = ценаНоменклатуры;
    КонецЦикла;

    Возврат таблицаПрайсЛиста;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  табДокПрайсЛиста - ТабличныйДокумент
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево - Результат выполнения
//      * СообщениеОбОшибке - Строка, Неопределено
//      * ОбластьЗаголовков - ОбластьЯчеекТабличногоДокумента, Неопределено
//      * ОбластьДанных - ОбластьЯчеекТабличногоДокумента, Неопределено
Функция получитьДанныеПрайсЛиста(Знач табДокПрайсЛиста)
    результат = Новый Структура;
    результат.Вставить("ОбластьЗаголовков", Неопределено);
    результат.Вставить("ОбластьДанных", Неопределено);
    результат.Вставить("Успех", Ложь);
    результат.Вставить("СообщениеОбОшибке", Неопределено);

    структураОбластиЗаголовков = найтиПозициюСтолбцовПрайсЛиста();
    Если структураОбластиЗаголовков.Столбцы.Количество() = 0 Тогда
        результат.СообщениеОбОшибке =
            "Ошибка анализа структуры табличного документа. Не найдена область заголовков прайс-листа.
            |Таблица прайс-листа должна содержать заголовки столбцов: [Артикул, Цена]";
        Возврат результат;
    КонецЕсли;

    перваяСтрока = структураОбластиЗаголовков.ДиапазонОбластиЗаголовков.ПерваяСтрока + 1;
    первыйСтолбец = структураОбластиЗаголовков.ДиапазонОбластиЗаголовков.ПервыйСтолбец + 1;
    последнийСтолбец = структураОбластиЗаголовков.ДиапазонОбластиЗаголовков.ПоследнийСтолбец;
    последняяСтрока = перваяСтрока;

    // Поиск последней строки данных таблицы прайс листа
    Для номерСтроки = перваяСтрока По результат.КоличествоСтрок Цикл
        этоПустаяСтрока = Истина;
        Для номерСтолбца = первыйСтолбец По последнийСтолбец Цикл
            текстЯчейки = табДокПрайсЛиста.Область(номерСтроки, номерСтолбца).Текст;
            этоПустаяСтрока = этоПустаяСтрока
                И РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(текстЯчейки, "\s*");
        КонецЦикла;

        Если этоПустаяСтрока Тогда
            Прервать;
        КонецЕсли;

        последняяСтрока = номерСтроки;
    КонецЦикла;

    результат.Успех = Истина;
    результат.ОбластьЗаголовков = табДокПрайсЛиста.Область(
            структураОбластиЗаголовков.ДиапазонОбластиЗаголовков.ПерваяСтрока,
            структураОбластиЗаголовков.ДиапазонОбластиЗаголовков.ПервыйСтолбец,
            структураОбластиЗаголовков.ДиапазонОбластиЗаголовков.ПоследняяСтрока,
            структураОбластиЗаголовков.ДиапазонОбластиЗаголовков.ПоследнийСтолбец);

    результат.ОбластьДанных = табДокПрайсЛиста.Область(
            перваяСтрока,
            первыйСтолбец,
            последняяСтрока,
            последнийСтолбец);

    Возврат результат;
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Заголовки - Структура
//          ** АдресЯчейки - Неопределено, Структура
//              *** Строка - Число
//              *** Столбец - Число
//          ** ШаблонПоиска - Строка
//      * ДиапазонОбластиЗаголовков - Структура
//          ** ПерваяСтрока - Число
//          ** ПоследняяСтрока - Число
//          ** ПервыйСтолбец - Число
//          ** ПоследнийСтолбец - Число
Функция найтиПозициюСтолбцовПрайсЛиста()
    искомыеСтолбцы = Новый Структура;
    искомыеСтолбцы_Ключи = "ШаблонПоиска, ИсходныйТекст, АдресЯчейки";
    искомыеСтолбцы.Вставить("Артикул", Новый Структура(искомыеСтолбцы_Ключи, "\.*[Аа]ртикул\.*", ""));
    искомыеСтолбцы.Добавить("Цена", Новый Структура(искомыеСтолбцы_Ключи, "\.*[Цц]ена[аы]\.*", ""));

    найденныеСтолбцы = Новый Структура;
    диапазонОбластиЗаголовков = Новый Структура;
    диапазонОбластиЗаголовков.Вставить("ПерваяСтрока", 1);
    диапазонОбластиЗаголовков.Вставить("ПоследняяСтрока", 1);
    диапазонОбластиЗаголовков.Вставить("ПервыйСтолбец", 1);
    диапазонОбластиЗаголовков.Вставить("ПоследнийСтолбец", 1);

    результат = Новый Структура;
    результат.Вставить("Заголовки, ДиапазонОбластиЗаголовков", найденныеСтолбцы, диапазонОбластиЗаголовков);

    Для номерСтроки = 1 По результат.КоличествоСтрок Цикл // Для каждой строки
        Для номерСтолбца = 1 По результат.КоличествоСтолбцов Цикл // Для каждого столбца

            // Поиск искомых столбцов в текущей ячейке
            текстЯчейки = табДокПрайсЛиста.Область(номерСтроки, номерСтолбца).Текст;
            Для Каждого искомыйСтолбецКЗ Из искомыеСтолбцы Цикл
                искомыйСтолбец = искомыйСтолбецКЗ.Значение;

                Если искомыйСтолбец.АдресЯчейки = Неопределено Тогда // Столбец найден ранее
                    Продолжить; // Переход к обработке следующего искомого столбца для текущей ячейки
                КонецЕсли;

                этоИскомыйСтолбец = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(
                        текстЯчейки, искомыйСтолбец.ШаблонПоиска);
                Если этоИскомыйСтолбец Тогда
                    искомыйСтолбец.АдресЯчейки = Новый Структура("Строка, Столбец", номерСтроки, номерСтолбца);
                    искомыйСтолбец.ИсходныйТекст = текстЯчейки;
                    найденныеСтолбцы.Добавить(искомыйСтолбецКЗ.Ключ, искомыйСтолбец);
                    Прервать; // Переход к обработке следующей ячейки строки
                КонецЕсли;
            КонецЦикла;
        КонецЦикла;

        диапазонОбластиЗаголовков.ПоследняяСтрока = номерСтроки;
        Если найденныеСтолбцы.Количество() = искомыеСтолбцы.Количество() Тогда
            Прервать; // Завершение цикла обхода строк - т.к. все значения найдены
        КонецЕсли;
    КонецЦикла;

    // Заполнение значений диапазона области заголовков
    Для Каждого столбецКЗ Из найденныеСтолбцы Цикл
        адресЯчейки = столбецКЗ.Значение.АдресЯчейки;

        диапазонОбластиЗаголовков.ПерваяСтрока =
            Макс(диапазонОбластиЗаголовков.ПерваяСтрока, адресЯчейки.Строка);

        диапазонОбластиЗаголовков.ПервыйСтолбец =
            Мин(диапазонОбластиЗаголовков.ПервыйСтолбец, адресЯчейки.Столбец);

        диапазонОбластиЗаголовков.ПоследнийСтолбец =
            Макс(диапазонОбластиЗаголовков.ПоследнийСтолбец, адресЯчейки.Столбец);
    КонецЦикла;

    Возврат результат;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
