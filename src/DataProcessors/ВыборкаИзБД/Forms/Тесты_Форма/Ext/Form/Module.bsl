&НаСервере
Процедура ВыполнитьЗапросНаСервере()
	ВыполнитьПорционно();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	ВыполнитьЗапросНаСервере();
КонецПроцедуры

&НаСервере
Функция ВыполнитьПорционно() Экспорт
	фабрикаЗапросов = Обработки.ВыборкаИзБД.Создать();
	фабрикаЗапросов.Количество = Объект.Количество;
	фабрикаЗапросов.Курсор = Неопределено;
	
	запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ &ПорцияВыгрузки 
	|	РеализацияТоваровИУслуг.Сотрудник.Представление КАК СотрудникПредставление,
	|	РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|	РеализацияТоваровИУслуг.ПризнакОплаты КАК ПризнакОплаты,
	|	РеализацияТоваровИУслуг.Дата КАК Дата
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|	РеализацияТоваровИУслуг.Проведен
	|	И РеализацияТоваровИУслуг.Дата > &ДатаНачала
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата"; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПорцияВыгрузки", фабрикаЗапросов.Количество);
	Запрос.Текст = ТекстЗапроса; 
	
	об = РеквизитФормыВЗначение("Объект");
	сч = 0;
	Пока Истина Цикл
		Запрос.УстановитьПараметр("ДатаНачала", фабрикаЗапросов.Курсор);
		результатЗапроса = запрос.Выполнить();
		Если результатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;
		
		фабрикаЗапросов.Результат = результатЗапроса.Выгрузить();
		фабрикаЗапросов.Курсор = фабрикаЗапросов.Результат[фабрикаЗапросов.Результат.Количество()-1].Дата;
		
		Если сч = 0 Тогда
			об.Результат = Новый ТаблицаЗначений;
			КопироватьТаблицу(об.Результат, фабрикаЗапросов.Результат);
		Иначе
			ВставитьДанныеИзТаблицы(об.Результат, фабрикаЗапросов.Результат );
		КонецЕсли;
		сч =сч + 1;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(об, "Объект");
КонецФункции

Процедура КопироватьТаблицу(Знач ТаблицаПриемник, Знач ТаблицаИсточник)
	//ТаблицаПриемник = Новый ТаблицаЗначений; //
	//ТаблицаИсточник = Новый ТаблицаЗначений; // 
	
	Если ТаблицаПриемник = ТаблицаИсточник Тогда
		ВызватьИсключение "ТаблицаПриемник и ТаблицаИсточник должны быть различными объектами";
	КонецЕсли;
	
	ТаблицаПриемник.Очистить();
	ТаблицаПриемник.Колонки.Очистить();
	
	ТаблицаПриемник.Вставить(Макс(ТаблицаПриемник.Количество() + ТаблицаИсточник.Количество() -1), 0);
	
	Для каждого столбец Из ТаблицаИсточник.Колонки Цикл
		ТаблицаПриемник.Колонки.Добавить(
			столбец.Имя, столбец.ТипЗначения, столбец.Заголовок, столбец.Ширина);
		ТаблицаПриемник.ЗагрузитьКолонку(ТаблицаИсточник.ВыгрузитьКолонку(столбец.Имя), столбец.Имя);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВставитьДанныеИзТаблицы(Знач ТаблицаПриемник, Знач ТаблицаИсточник)
	//ТаблицаПриемник = Новый ДинамическийСписок;	//
	//ТаблицаИсточник = Новый ТаблицаЗначений;	//
	
	Если ТаблицаПриемник = ТаблицаИсточник Тогда
		ВызватьИсключение "ТаблицаПриемник и ТаблицаИсточник должны быть различными объектами";
	КонецЕсли;
	
	Если ТаблицаИсточник.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//!ТаблицаПриемник.Вставить(ТаблицаПриемник.Количество() + ТаблицаИсточник.Количество() -1);
	
	Для каждого строкаИсточник Из ТаблицаИсточник Цикл
		строкаПриемник = ТаблицаПриемник.Добавить();
		Для каждого столбец Из ТаблицаИсточник.Колонки Цикл
			строкаПриемник[столбец.Имя] = строкаИсточник[столбец.Имя];
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	об = РеквизитФормыВЗначение("Объект");
	об.Результат = Новый ТаблицаЗначений;
	ЗначениеВРеквизитФормы(об, "Объект");
КонецПроцедуры
