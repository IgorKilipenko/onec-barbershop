#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(_, __)
    // BSLLS:QueryParseError-off
    Объект.ТекстЗапроса =
        "ВЫБРАТЬ ПЕРВЫЕ &ПорцияВыгрузки
        |   РеализацияТоваровИУслуг.Ссылка КАК Ссылка,
        |	РеализацияТоваровИУслуг.Сотрудник.Представление КАК СотрудникПредставление,
        |	РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
        |	РеализацияТоваровИУслуг.ПризнакОплаты КАК ПризнакОплаты,
        |	РеализацияТоваровИУслуг.Дата КАК Дата
        |ИЗ
        |	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
        |ГДЕ
        |	РеализацияТоваровИУслуг.Проведен
        |	И РеализацияТоваровИУслуг.Ссылка > &Ссылка
        |   И РеализацияТоваровИУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
        |
        |УПОРЯДОЧИТЬ ПО
        |   РеализацияТоваровИУслуг.Ссылка
        |";

    Объект.Количество = 10;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗапрос(_)
    ВыполнитьЗапросНаСервере();
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьЗапросНаСервере()
    таблицаРезультат = ВыполнитьПорционно();
    таблицаРезультат.Сортировать("Дата Возр");

    новыйЭлемент = Новый Структура(
            "Имя, Тип, Путь", "ФормаРезультатЗапроса", Тип("ТаблицаФормы"), "ФормаРезультатЗапроса");
    эл = Элементы.Найти(новыйЭлемент.Имя);
    Если эл <> Неопределено Тогда
        Элементы.Удалить(Элементы.Найти(эл.Имя));
    КонецЕсли;

    СоздатьТаблицуЗначений(таблицаРезультат.Колонки);
    таблицаФормы = Элементы.Добавить(новыйЭлемент.Имя, новыйЭлемент.Тип, Элементы.ГруппаРезультаты);
    таблицаФормы.ПутьКДанным = новыйЭлемент.Путь;

    Для Каждого колонка Из таблицаРезультат.Колонки Цикл
        добавитКолонкуТаблицыФормы(колонка.Имя, колонка.ТипЗначения, таблицаФормы);
    КонецЦикла;

    Для Каждого строкаРезультат Из таблицаРезультат Цикл
        новаяСтрока = ЭтотОбъект["ФормаРезультатЗапроса"].Добавить();
        Для Каждого столбец Из таблицаРезультат.Колонки Цикл
            новаяСтрока[столбец.Имя] = строкаРезультат[столбец.Имя];
        КонецЦикла;
    КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ВыполнитьПорционно()
    фабрикаЗапросов = Обработки.ВыборкаИзБД.Создать();
    фабрикаЗапросов.Количество = Объект.Количество;
    поляКурсора = "Ссылка";
    фабрикаЗапросов.Курсор = Новый ФиксированнаяСтруктура(поляКурсора);

    запрос = Новый Запрос;
    текстЗапроса_ = Объект.ТекстЗапроса;

    текстЗапроса_ = СтрЗаменить(текстЗапроса_, "&ПорцияВыгрузки", фабрикаЗапросов.Количество);
    запрос.Текст = текстЗапроса_;
    запрос.УстановитьПараметр("ДатаНачала", Неопределено);
    запрос.УстановитьПараметр("ДатаОкончания", ТекущаяДата());

    результат_ = Новый ТаблицаЗначений;
    сч = 0;
    Пока Истина Цикл
        запрос.УстановитьПараметр("Ссылка", фабрикаЗапросов.Курсор.Ссылка);
        результатЗапроса_ = запрос.Выполнить();
        фабрикаЗапросов.Результат = результатЗапроса_.Выгрузить();

        Если сч = 0 Тогда
            РаботаСТаблицами.КопироватьТаблицу(результат_, фабрикаЗапросов.Результат);
        Иначе
            РаботаСТаблицами.ВставитьДанныеИзТаблицы(результат_, фабрикаЗапросов.Результат);
        КонецЕсли;

        Если фабрикаЗапросов.Результат.Количество() = 0 Тогда
            Прервать;
        КонецЕсли;

        последняяСтрокаДанных = фабрикаЗапросов.Результат[фабрикаЗапросов.Результат.Количество() - 1];
        фабрикаЗапросов.Курсор = Новый ФиксированнаяСтруктура(поляКурсора,
                последняяСтрокаДанных.Ссылка);
        сч = сч + 1;
    КонецЦикла;

    Возврат результат_;
КонецФункции

&НаСервере
Процедура добавитКолонкуТаблицыФормы(Знач имя, Знач тип, Знач таблица)
    имяТаблицы = "ФормаРезультатЗапроса";
    имяПоляКолонки = СтрШаблон("%1%2", имяТаблицы, имя);
    новаяКолонка = Элементы.Добавить(СтрШаблон("%1%2", имяТаблицы, имя), Тип("ПолеФормы"), таблица);
    новаяКолонка.Заголовок = имя;
    новаяКолонка.ПутьКДанным = СтрШаблон("%1.%2", имяТаблицы, имя);
    новаяКолонка.Вид = ВидПоляФормы.ПолеВвода;
КонецПроцедуры

&НаСервере
Процедура СоздатьТаблицуЗначений(Знач колонки)
    имяТаблицы = "ФормаРезультатЗапроса";
    новыйРеквизитТаблица = Новый РеквизитФормы(имяТаблицы, Новый ОписаниеТипов("ТаблицаЗначений"));
    добавляемыеРеквизиты = Новый Массив;
    добавляемыеРеквизиты.Добавить(новыйРеквизитТаблица);

    Для Каждого колонка Из колонки Цикл
        добавляемыеРеквизиты.Добавить(Новый РеквизитФормы(колонка.Имя, колонка.ТипЗначения, имяТаблицы));
    КонецЦикла;

    ЭтотОбъект.ИзменитьРеквизиты(добавляемыеРеквизиты);
КонецПроцедуры

&НаСервере
Процедура УдалитьТаблицуЗначений(Знач колонки)
    имяТаблицы = "ФормаРезультатЗапроса";
    результат = Новый РеквизитФормы(имяТаблицы, Новый ОписаниеТипов("ТаблицаЗначений"));
    удаляемыеРеквизиты = Новый Массив;
    удаляемыеРеквизиты.Вставить(результат);

    Для Каждого колонка Из колонки Цикл
        удаляемыеРеквизиты.Добавить(Новый РеквизитФормы(
                колонка.Имя, колонка.ТипЗначения, имяТаблицы, колонка.Заголовок, Ложь));
    КонецЦикла;

    ЭтотОбъект.ИзменитьРеквизиты(удаляемыеРеквизиты);
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
