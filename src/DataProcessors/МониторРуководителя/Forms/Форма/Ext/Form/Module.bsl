#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(_)
	заполнитьПериодОбработки();
	заполнитьДанные();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(_)
	заполнитьДанные();
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцСтрокойНажатие(_, стандартнаяОбработка)
	стандартнаяОбработка = Ложь;
	выбратьПериодОбработки(Истина);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура заполнитьДанные()
	датаНачала = ЭтотОбъект.ПериодОбработки;
	датаОкончания = КонецМесяца(ЭтотОбъект.ПериодОбработки);
	заполнитьЧисловыеПоказатели(датаНачала, датаОкончания);
КонецПроцедуры

&НаКлиенте
Асинх Функция выбратьПериодОбработки(Знач обновитьДанные = Ложь)
	подсказка = "Введите период получения данных";
	частьДаты = ЧастиДаты.Дата;
	результатДата = Ждать ВвестиДатуАсинх(ЭтотОбъект.ПериодОбработки, подсказка, частьДаты);
	Если результатДата <> Неопределено Тогда
		ЭтотОбъект.ПериодОбработки = НачалоМесяца(результатДата);
		ЭтотОбъект.МесяцСтрокой = Формат(ЭтотОбъект.ПериодОбработки, получитьФорматПериода());
		заполнитьДанные();
		Возврат Истина;
	КонецЕсли;

	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура заполнитьПериодОбработки()
	ЭтотОбъект.ПериодОбработки = НачалоМесяца(получитьТекущуюДатуНаСервере());
	ЭтотОбъект.МесяцСтрокой = Формат(ЭтотОбъект.ПериодОбработки, получитьФорматПериода());
КонецПроцедуры

&НаКлиенте
Процедура заполнитьЧисловыеПоказатели(Знач датаНачала = Неопределено, Знач датаОкончания = Неопределено)
	датаНачала = ?(датаНачала = Неопределено, ЭтотОбъект.ПериодОбработки, датаНачала);
	датаОкончания = ?(датаОкончания = Неопределено, КонецМесяца(датаНачала), датаОкончания);

	данныеПоказателей = получитьДанныеЧисловыхПоказателейНаСервере(датаНачала, датаОкончания);

	ЭтотОбъект.ВыручкаЧисло = данныеПоказателей.Выручка;
	ЭтотОбъект.СреднийЧек = ОКР(?(данныеПоказателей.Завершенных > 0,
				данныеПоказателей.Выручка / данныеПоказателей.Завершенных, 0), 2);
	ЭтотОбъект.ВсегоЗаписей = данныеПоказателей.ВсегоЗаписей;
	ЭтотОбъект.Завершенных = данныеПоказателей.Завершенных;

	Если ЭтотОбъект.ВсегоЗаписей > 0 Тогда
		процентЗавершенных = ОКР((100 * ЭтотОбъект.Завершенных / ЭтотОбъект.ВсегоЗаписей), 2);
		ЭтотОбъект.ЗавершенныхПроцентСтрока = СтрШаблон("Это %1 процентов от всех записей", процентЗавершенных);
	Иначе
		ЗавершенныхПроцентСтрока = "В этом периоде нет записей клиентов!";
	КонецЕсли;
КонецПроцедуры

#Область ЗапросыДанных
&НаСервереБезКонтекста
Функция получитьДанныеЧисловыхПоказателейНаСервере(Знач датаНачала, Знач датаОкончания)
	запрос = Новый Запрос;
	запрос.УстановитьПараметр("ДатаНачала", датаНачала);
	запрос.УстановитьПараметр("ДатаОкончания", датаОкончания);

	запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказыКлиентов.Регистратор КАК ЗаписьКлиента
		|ПОМЕСТИТЬ ВТ_ЗаказыКлиентов
		|ИЗ
		|	РегистрНакопления.ЗаказыКлиентов КАК ЗаказыКлиентов
		|ГДЕ
		|	ЗаказыКлиентов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЗаказыКлиентов.Регистратор ССЫЛКА Документ.ЗаписьКлиента
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыКлиентов.Регистратор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаписьКлиента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПродажиОбороты.Регистратор КАК Регистратор,
		|	СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаОборот
		|ПОМЕСТИТЬ ВТ_Продажи
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Регистратор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КОЛИЧЕСТВО(ВТ_ЗаказыКлиентов.ЗаписьКлиента) КАК ВсегоЗаписей,
		|	КОЛИЧЕСТВО(ВТ_Продажи.Регистратор) КАК Завершенных,
		|	СУММА(ВТ_Продажи.СуммаОборот) КАК Выручка
		|ИЗ
		|	ВТ_Продажи КАК ВТ_Продажи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
		|		ПО (РеализацияТоваровИУслуг.Ссылка = ВТ_Продажи.Регистратор)
		|		ПРАВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыКлиентов КАК ВТ_ЗаказыКлиентов
		|		ПО (ВТ_ЗаказыКлиентов.ЗаписьКлиента = РеализацияТоваровИУслуг.ДокументОснование)
		|";

	результатЗапроса = запрос.Выполнить();
	Если результатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;

	результат = Новый Структура("Выручка, ВсегоЗаписей, Завершенных");
	выборка = результатЗапроса.Выбрать();
	выборка.Следующий();
	ЗаполнитьЗначенияСвойств(результат, выборка);

	Возврат результат;
КонецФункции
#КонецОбласти // ЗапросыДанных

&НаСервереБезКонтекста
Функция получитьТекущуюДатуНаСервере()
	Возврат ТекущаяДатаСеанса();
КонецФункции

&НаКлиенте
Функция получитьФорматПериода()
	Возврат "ДФ='ММММ гггг'";
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
