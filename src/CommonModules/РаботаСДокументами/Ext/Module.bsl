#Область ПрограммныйИнтерфейс

// Заполняет поле АвторДокумента
//
// Параметры:
//  объект - Структура - Документ или представление Документа
//
Процедура ЗаполнитьПолеАвторДокументаНаСервере(объект) Экспорт
    объект.АвторДокумента = ?(ЗначениеЗаполнено(объект.АвторДокумента),
            объект.АвторДокумента, ПараметрыСеанса.ТекущийПользователь);
КонецПроцедуры

// Параметры:
//	контрагентСсылка
//		- СправочникСсылка.Контрагенты
//		- Произвольный
//
// Возвращаемое значение:
//	- Булево
Функция ЭтоКлиент(Знач контрагентСсылка) Экспорт // => Булево

    Если (контрагентСсылка = Неопределено) ИЛИ (ТипЗнч(контрагентСсылка) <> Тип("СправочникСсылка.Контрагенты")) Тогда
        Возврат Ложь;
    КонецЕсли;

    запросКонтрагента = Новый Запрос;
    запросКонтрагента.УстановитьПараметр("Ссылка", контрагентСсылка);

    запросКонтрагента.Текст =
        "ВЫБРАТЬ
        |	Контрагенты.ТипКонтрагента КАК ТипКонтрагента,
        |	Контрагенты.Ссылка КАК Контрагент
        |ИЗ
        |	Справочник.Контрагенты КАК Контрагенты
        |ГДЕ
        |	Контрагенты.Ссылка = &Ссылка
        |";

    результатЗапроса = запросКонтрагента.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Ложь;
    КонецЕсли;

    контрагентВыборка = результатЗапроса.Выбрать();
    контрагентВыборка.Следующий();

    Если ЗначениеЗаполнено(контрагентВыборка.ТипКонтрагента)
        И контрагентВыборка.ТипКонтрагента = Перечисления.ТипыКонтрагентов.Клиент Тогда
        Возврат Истина;
    Иначе
        Возврат Ложь;
    КонецЕсли;
КонецФункции

// Возвращает структуру с именами (ключ) и значениями из Перечисления.ВидыОперацийРасходаДенег
//
// Возвращаемое значение:
//	- Структура
//
Функция ПолучитьВидыОперацийРасходаДенег() Экспорт
    результат = Новый Структура;
    Для Каждого значениеПеречисления Из Метаданные.Перечисления.ВидыОперацийРасходаДенег.ЗначенияПеречисления Цикл
        имя_ = значениеПеречисления.Имя;
        результат.Вставить(имя_, Перечисления.ВидыОперацийРасходаДенег[имя_]);
    КонецЦикла;

    Возврат результат;
КонецФункции

// Возвращает структуру с именами (ключ) и значениями из Перечисления.ВидыОперацийПоступленияДенег
//
// Возвращаемое значение:
//	- Структура
//
Функция ПолучитьВидыОперацийПоступленияДенег() Экспорт
    результат = Новый Структура;
    Для Каждого значениеПеречисления Из Метаданные.Перечисления.ВидыОперацийПоступленияДенег.ЗначенияПеречисления Цикл
        имя_ = значениеПеречисления.Имя;
        результат.Вставить(имя_, Перечисления.ВидыОперацийПоступленияДенег[имя_]);
    КонецЦикла;

    Возврат результат;
КонецФункции

// Возвращает структуру с именами (ключ) и значениями из Перечисления.ТипыДенежныхСредств
//
// Возвращаемое значение:
//	- Структура
//
Функция ПолучитьТипыДенежныхСредств() Экспорт
    результат = Новый Структура;
    Для Каждого значениеПеречисления Из Метаданные.Перечисления.ТипыДенежныхСредств.ЗначенияПеречисления Цикл
        имя_ = значениеПеречисления.Имя;
        результат.Вставить(имя_, Перечисления.ТипыДенежныхСредств[имя_]);
    КонецЦикла;

    Возврат результат;
КонецФункции

// Параметры:
//  ссылка - ДокументСсылка
//  дата - Дата
//  включаяГраницу - Булево
// Возвращаемое значение:
//  - Граница - Граница момента времени
Функция ПолучитьМоментВремениДокумента(Знач ссылка, Знач дата, Знач включаяГраницу = Истина) Экспорт
    моментВремени = Новый МоментВремени(дата, ссылка);
    Возврат Новый Граница(моментВремени, ?(включаяГраницу, ВидГраницы.Включая, ВидГраницы.Исключая));
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
