#Область ПрограммныйИнтерфейс

// Параметры:
//	номенклатура - СправочникСсылка.Номенклатура
// 	видЦены	- Перечисления.ВидыЦенПродажи
//		- Неопределено
//	датаЦены - Дата
//		- Неопределено
//
// Возвращаемое значение:
//	Число - значение цены
//	NULL - если значение цены для параметров отбора неопределено
//
Функция ПолучитьЦенуПродажиНаДату(номенклатура, Знач видЦены = Неопределено, Знач датаЦены = Неопределено) Экспорт
	видЦены = ?(видЦены = Неопределено, Перечисления.ВидыЦенПродажи.РозничнаяЦена, видЦены);

	запрос = Новый Запрос;
	запрос.Текст = "
		| ВЫБРАТЬ
		| 	ЦеныНоменклатуры.Цена КАК Цена
		| ИЗ
		| 	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|		&Период,
		|		Номенклатура = &Номенклатура
		|			И ВидЦены = &ВидЦены
		|	) КАК ЦеныНоменклатуры
		|";

	запрос.УстановитьПараметр("Номенклатура", номенклатура);
	запрос.УстановитьПараметр("Период", датаЦены);
	запрос.УстановитьПараметр("ВидЦены", видЦены);

	результатЗапроса = запрос.Выполнить();
	Если результатЗапроса.Пустой() Тогда
		Возврат NULL;
	КонецЕсли;

	выборка = результатЗапроса.Выбрать();
	выборка.Следующий();

	Возврат выборка.Цена;
КонецФункции

// Параметры:
// 	номенклатура - СправочникСсылка.Номенклатура
//
// Возвращаемое значение:
// 	СправочникСсылка.СтатьиЗатрат
//
Функция ПолучитьСтатьюЗатратПоНоменклатуре(номенклатура) Экспорт
	запросСтатьяЗатрат = Новый Запрос;
	запросСтатьяЗатрат.УстановитьПараметр("Ссылка", номенклатура);

	запросСтатьяЗатрат.Текст =
		"ВЫБРАТЬ
		|    Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат
		|ИЗ
		|    Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|    Номенклатура.Ссылка = &Ссылка";

	выборка = запросСтатьяЗатрат.Выполнить().Выбрать();
	выборка.Следующий();

	Возврат выборка.СтатьяЗатрат;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
