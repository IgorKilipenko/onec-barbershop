#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьЦеныУслуг(_)
    списокНоменклатуры = РаботаСФормамиКлиент.ПолучитьСписокНоменклатуры(Объект.Услуги);

    структураЦенНоменклатуры = получитьЦеныДляСпискаНоменклатурыНаСервере(
            списокНоменклатуры,
            Объект.Поставщик,
            ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, Неопределено));

    Если структураЦенНоменклатуры = Неопределено Тогда
        сообщение = Новый СообщениеПользователю;
        сообщение.Текст =
            "Цены товаров не установлены.
            |Для текущего списка номенклатуры отсутствуют данные в регистре цен номенклатуры поставщиков";
        сообщение.Сообщить();

        Возврат;
    КонецЕсли;

    количествоОбновленных = РаботаСФормамиКлиент.ОбновитьЦеныНоменклатурыТаблицы(
            Объект.Услуги, структураЦенНоменклатуры);

    сообщение = Новый СообщениеПользователю;
    сообщение.Текст = СтрШаблон(
            "Цены номенклатуры обновлены. Количество обновленных строк: ""%1"".", количествоОбновленных);
    сообщение.Сообщить();
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиНоменклатураПриИзменении(_)
    Элементы.Услуги.ТекущиеДанные.СтатьяЗатрат = получитьСтатьюЗатрат();

    ценаНоменклатурыОбновлена = обновитьЦенуНоменклатуры(Элементы.Услуги.ТекущиеДанные);
    Если ценаНоменклатурыОбновлена Тогда
        обновитьСуммуПоСтрокеУслуги();
        обновитьСуммуДокумента();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(_)
    обновитьСуммуПоСтрокеУслуги();
    обновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(_)
    обновитьСуммуПоСтрокеУслуги();
    обновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиПослеУдаления(_)
    обновитьСуммуДокумента();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыУслуги

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//	СправочникСсылка.СтатьиЗатрат
&НаКлиенте
Функция получитьСтатьюЗатрат()
    номенклатура_ = Элементы.Услуги.ТекущиеДанные.Номенклатура;
    Возврат РаботаСЦенамиВызовСервера.ПолучитьСтатьюЗатратПоНоменклатуре(номенклатура_);
КонецФункции

&НаКлиенте
Процедура обновитьСуммуДокумента()
    Объект.СуммаДокумента = Объект.Услуги.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура обновитьСуммуПоСтрокеУслуги()
    строкаТчУслуги_ = Элементы.Услуги.ТекущиеДанные;
    строкаТчУслуги_.Сумма = строкаТчУслуги_.Количество * строкаТчУслуги_.Цена;
КонецПроцедуры

// Параметры:
//  текущСтрокаУслуги - СтрокаТабличнойЧасти
// Возвращаемое значение:
//  - Булево - Истина, если цена номенклатуры обновлена, если получить цену не удалось
//      или полученная цена не отличается от текущей возвращает - Ложь
&НаКлиенте
Функция обновитьЦенуНоменклатуры(Знач текущСтрокаУслуги)
    ценаНоменклатуры = текущСтрокаУслуги.Цена;

    Если ЗначениеЗаполнено(текущСтрокаУслуги.Номенклатура)
        И ЗначениеЗаполнено(Объект.Поставщик) Тогда

        ценаНоменклатуры = получитьЦенуНоменклатурыНаСервере(
                текущСтрокаУслуги.Номенклатура, Объект.Поставщик,
                ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, Неопределено));

        Если ценаНоменклатуры = 0 Тогда
            сообщение = Новый СообщениеПользователю;
            сообщение.Текст = СтрШаблон("Не удалось получить цену номенклатуры: ""%1"".", Строка(текущСтрокаУслуги.Номенклатура));
            сообщение.Сообщить();
        КонецЕсли;
    КонецЕсли;

    Если текущСтрокаУслуги.Цена = ценаНоменклатуры Тогда
        Возврат Ложь; // Без изменения
    КонецЕсли;

    текущСтрокаУслуги.Цена = ценаНоменклатуры;
    Возврат Истина;
КонецФункции

// Параметры:
//  номенклатураСсылка - СправочникСсылка.Номенклатура
//  поставщикСсылка - СправочникСсылка.Контрагенты
//  дата - Дата
// Возвращаемое значение:
//  - Число
&НаСервереБезКонтекста
Функция получитьЦенуНоменклатурыНаСервере(Знач номенклатураСсылка, Знач поставщикСсылка, Знач дата)
    результат = РегистрыСведений.ЦеныНоменклатурыПоставщиков.ПолучитьЦенуНоменклатуры(
            номенклатураСсылка, поставщикСсылка, дата);

    Возврат ?(результат = Неопределено, 0, результат);
КонецФункции

// Параметры:
//  списокНоменклатуры - Массив, ФиксированныйМассив Из ДокументСсылка.Номенклатура
//  поставщикСсылка - ДокументСсылка.Контрагенты
//  дата - Дата, МоментВремени, Граница, Неопределено
// Возвращаемое значение:
//  - Соответствие - Таблица цен номенклатуры поставщика
//      * Ключ - ДокументСсылка.Номенклатура
//      * Значение - Число
//  - Неопределено - Если данные отсутствуют
&НаСервереБезКонтекста
Функция получитьЦеныДляСпискаНоменклатурыНаСервере(Знач списокНоменклатуры, Знач поставщикСсылка, Знач дата)
    таблицаЦенНоменклатуры = РегистрыСведений.ЦеныНоменклатурыПоставщиков.ПолучитьСписокЦенНоменклатуры(
            списокНоменклатуры, поставщикСсылка, дата);

    Если таблицаЦенНоменклатуры = Неопределено Тогда
        Возврат Неопределено;
    КонецЕсли;

    Возврат РегистрыСведений.ЦеныНоменклатурыПоставщиков.КонвертироватьТаблицуЦенНоменклатурыВСоответствие(таблицаЦенНоменклатуры);
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
