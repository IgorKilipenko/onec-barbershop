#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(отказ, __)
    результатДвижения = выполнитьДвижениеДенежныеСредстваРасход();
    Если результатДвижения.Отказ Тогда
        Для Каждого описаниеОшибки Из результатДвижения.ОписанияОшибок Цикл
            сообщение = Новый СообщениеПользователю;
            сообщение.Текст = описаниеОшибки.Сообщение;
            сообщение.Поле = описаниеОшибки.Поле;
            сообщение.УстановитьДанные(ЭтотОбъект);
            сообщение.Сообщить();
        КонецЦикла;
        отказ = Истина;
    КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(данныеЗаполнения, __)
    данныеЗаполненияОснования = получитьДанныеЗаполненияНаОсновании(данныеЗаполнения);

    Если данныеЗаполненияОснования <> Неопределено Тогда
        ЗаполнитьЗначенияСвойств(ЭтотОбъект, данныеЗаполненияОснования);
        ДокументОснование = данныеЗаполнения;
    КонецЕсли;

    РаботаСДокументами.ЗаполнитьПолеАвторДокументаНаСервере(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

Функция выполнитьДвижениеДенежныеСредстваРасход()
    результат = Новый Структура("Отказ, ОписанияОшибок", Ложь, Новый Массив);
    движение = Движения.ДенежныеСредства.Добавить();
    движение.ВидДвижения = ВидДвиженияНакопления.Расход;
    движение.Период = Дата;
    движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные;
    движение.БанковскийСчетКасса = РасчетныйСчет;
    движение.Сумма = СуммаДокумента;

    Движения.ДенежныеСредства.БлокироватьДляИзменения = Истина;
    Движения.ДенежныеСредства.Записывать = Истина;
    Движения.Записать();

    // Контроль остатков ДС
    остатокДС = получитьОстатокДенежныхСредствНаРасчетномСчете(РасчетныйСчет);
    Если остатокДС = Неопределено ИЛИ остатокДС.Сумма < 0 Тогда
        форматФинансовыхДанных = "ЧДЦ=2; ЧРГ= ; ЧН=0.00";
        результат.Отказ = Истина;
        результат.ОписанияОшибок.Добавить(Новый Структура("Сообщение, Поле",
                СтрШаблон(
                    "По расчетному счету ""%1"" недостаточно денежных средств для списания в размере: %2.
                    |Текущий остаток на расчетном счете: %3.",
                    остатокДС.РасчетныйСчет,
                    Формат(-остатокДС.Сумма, форматФинансовыхДанных),
                    Формат(СуммаДокумента + остатокДС.Сумма, форматФинансовыхДанных)), "СуммаДокумента"));
    КонецЕсли;

    Возврат результат;
КонецФункции

Функция получитьДанныеЗаполненияНаОсновании(Знач документОснованиеСсылка)
    Если НЕ ЗначениеЗаполнено(документОснованиеСсылка) Тогда
        Возврат Неопределено;
    КонецЕсли;

    типДокументаОснования = ТипЗнч(документОснованиеСсылка);
    этоРеализацияТиУ = типДокументаОснования = Тип("ДокументСсылка.РеализацияТоваровИУслуг");
    этоПоступлениеТиМ = типДокументаОснования = Тип("ДокументСсылка.ПоступлениеТоваровИМатериалов");
    этоПоступлениеУслуг = типДокументаОснования = Тип("ДокументСсылка.ПоступлениеУслуг");

    Если НЕ (этоРеализацияТиУ ИЛИ этоПоступлениеТиМ ИЛИ этоПоступлениеУслуг) Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = Новый Структура;

    Если этоРеализацияТиУ Тогда
        результат = получитьДанныеПоРеализацииТоваровИУслуг(документОснованиеСсылка);
    Иначе
        результат = получитьДанныеПоПоступлениюТоваровИМатериаловИлиУслуг(документОснованиеСсылка);
    КонецЕсли;

    Возврат результат;
КонецФункции

Функция получитьДанныеПоРеализацииТоваровИУслуг(Знач ссылка)
    выбираемыеРеквизиты = Новый Структура;
    выбираемыеРеквизиты.Вставить("Клиент", "Получатель");
    выбираемыеРеквизиты.Вставить("СуммаДокумента", "СуммаДокумента");

    результат = РаботаСРеквизитами.ЗначенияРеквизитовОбъекта(ссылка, выбираемыеРеквизиты);
    результат.Вставить("ВидОперации", Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю);

    Возврат результат;
КонецФункции

Функция получитьДанныеПоПоступлениюТоваровИМатериаловИлиУслуг(Знач ссылка)
    выбираемыеРеквизиты = Новый Структура;
    выбираемыеРеквизиты.Вставить("Поставщик", "Получатель");
    выбираемыеРеквизиты.Вставить("ДоговорПоставщика", "ДоговорКонтрагента");
    выбираемыеРеквизиты.Вставить("СуммаДокумента", "СуммаДокумента");

    результат = РаботаСРеквизитами.ЗначенияРеквизитовОбъекта(ссылка, выбираемыеРеквизиты);
    результат.Вставить("ВидОперации", Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику);

    Возврат результат;
КонецФункции

// Параметры:
//	расчетныйСчетСсылка - СправочникСсылка.БанковскиеСчета
//
// Возвращаемое значение:
//	- Структура - Структура вида: { РасчетныйСчет: Строка, Сумма: Число }
//  - Неопределено - Если в РегистрНакопления.ДенежныеСредства нет записи с указанным расчетным счетом
Функция получитьОстатокДенежныхСредствНаРасчетномСчете(Знач расчетныйСчетСсылка)
    запросОстаткиДС = Новый Запрос;
    запросОстаткиДС.УстановитьПараметр("РасчетныйСчет", расчетныйСчетСсылка);
    запросОстаткиДС.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));

    запросОстаткиДС.Текст =
        "ВЫБРАТЬ
        |	ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК РасчетныйСчет,
        |	ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
        |ИЗ
        |	РегистрНакопления.ДенежныеСредства.Остатки(
        |		&МоментВремени,
        |		БанковскийСчетКасса = &РасчетныйСчет
        |			И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)) КАК ДенежныеСредстваОстатки
        |";

    результатЗапроса = запросОстаткиДС.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = Новый Структура("РасчетныйСчет, Сумма");
    выборка = результатЗапроса.Выбрать();
    выборка.Следующий();
    ЗаполнитьЗначенияСвойств(результат, выборка);
    Возврат выборка;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
