#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(_, __)
    выполнитьДвижениеДенежныеСредстваРасход();
КонецПроцедуры

Процедура ОбработкаЗаполнения(данныеЗаполнения, __)
    данныеЗаполненияОснования = получитьДанныеЗаполненияНаОсновании(данныеЗаполнения);

    Если данныеЗаполненияОснования <> Неопределено Тогда
        ЗаполнитьЗначенияСвойств(ЭтотОбъект, данныеЗаполненияОснования);
        ДокументОснование = данныеЗаполнения;
    КонецЕсли;

    РаботаСДокументами.ЗаполнитьПолеАвторДокументаНаСервере(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

Процедура выполнитьДвижениеДенежныеСредстваРасход()
    Движения.ДенежныеСредства.Записывать = Истина;
    движение = Движения.ДенежныеСредства.Добавить();
    движение.ВидДвижения = ВидДвиженияНакопления.Расход;
    движение.Период = Дата;
    движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные;
    движение.БанковскийСчетКасса = РасчетныйСчет;
    движение.Сумма = СуммаДокумента;
КонецПроцедуры

Функция получитьДанныеЗаполненияНаОсновании(Знач документОснованиеСсылка)
    Если НЕ ЗначениеЗаполнено(документОснованиеСсылка) Тогда
        Возврат Неопределено;
    КонецЕсли;

    типДокументаОснования = ТипЗнч(документОснованиеСсылка);
    этоРеализацияТиУ = типДокументаОснования = Тип("ДокументСсылка.РеализацияТоваровИУслуг");
    этоПоступлениеТиМ = типДокументаОснования = Тип("ДокументСсылка.ПоступлениеТоваровИМатериалов");
    этоПоступлениеУслуг = типДокументаОснования = Тип("ДокументСсылка.ПоступлениеУслуг");

    Если НЕ (этоРеализацияТиУ ИЛИ этоПоступлениеТиМ ИЛИ этоПоступлениеУслуг) Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = Новый Структура;

    Если этоРеализацияТиУ Тогда
        результат = получитьДанныеПоРеализацииТоваровИУслуг(документОснованиеСсылка);
    Иначе
        результат = получитьДанныеПоПоступлениюТоваровИМатериаловИлиУслуг(документОснованиеСсылка);
    КонецЕсли;

    Возврат результат;
КонецФункции

Функция получитьДанныеПоРеализацииТоваровИУслуг(Знач ссылка)
    выбираемыеРеквизиты = Новый Структура;
    выбираемыеРеквизиты.Вставить("Клиент", "Получатель");
    выбираемыеРеквизиты.Вставить("СуммаДокумента", "СуммаДокумента");

    результат = РаботаСРеквизитами.ЗначенияРеквизитовОбъекта(ссылка, выбираемыеРеквизиты);
    результат.Вставить("ВидОперации", Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю);

    Возврат результат;
КонецФункции

Функция получитьДанныеПоПоступлениюТоваровИМатериаловИлиУслуг(Знач ссылка)
    выбираемыеРеквизиты = Новый Структура;
    выбираемыеРеквизиты.Вставить("Поставщик", "Получатель");
    выбираемыеРеквизиты.Вставить("ДоговорПоставщика", "ДоговорКонтрагента");
    выбираемыеРеквизиты.Вставить("СуммаДокумента", "СуммаДокумента");

    результат = РаботаСРеквизитами.ЗначенияРеквизитовОбъекта(ссылка, выбираемыеРеквизиты);
    результат.Вставить("ВидОперации", Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику);

    Возврат результат;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
