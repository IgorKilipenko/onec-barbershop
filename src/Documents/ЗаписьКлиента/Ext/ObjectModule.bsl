#Область ПрограммныйИнтерфейс

Функция РассчитатьДатуОкончанияЗаписи() Экспорт
    услугиТЗ = Услуги.Выгрузить( , "Номенклатура");
    Возврат ДатаЗаписи + Документы.ЗаписьКлиента.РассчитатьДлительностьОказанияУслуг(услугиТЗ) * 60;
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(_, __, ___)
    РаботаСДокументами.ЗаполнитьПолеАвторДокументаНаСервере(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(_, __)
    выполнитьВсеДвижения();
КонецПроцедуры

Процедура ПередЗаписью(_, __, ___)
    Если ОбменДанными.Загрузка Тогда
        Возврат;
    КонецЕсли;

    УслугаОказана = ЗначениеЗаполнено(Документы.ЗаписьКлиента.ПолучитьДокументРеализацииНаОсновании(Ссылка));
    ДатаЗаписи = НачалоМинуты(ДатаЗаписи);
    ДатаОкончанияЗаписи = РассчитатьДатуОкончанияЗаписи();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

Процедура выполнитьВсеДвижения()
    Движения.ЗаказыКлиентов.Записывать = Истина;
    Движения.ЖурналЗаписейКлиентов.Записывать = Истина;

    Для Каждого текСтрокаУслуги Из Услуги Цикл
        выполнитьДвижениеЗаказыКлиентовПриход(текСтрокаУслуги);
    КонецЦикла;

    выполнитьДвижениеЖурналЗаписейКлиентов();
КонецПроцедуры

Функция создатьДвижениеЗаказыКлиентовПриход()
    движение = Движения.ЗаказыКлиентов.Добавить();
    движение.ВидДвижения = ВидДвиженияНакопления.Приход;
    движение.Период = Дата;
    движение.Клиент = Клиент;
    движение.ДатаЗаписи = НачалоМинуты(ЭтотОбъект.ДатаЗаписи);

    Возврат движение;
КонецФункции

// Параметры:
//	услуга - ДокументТабличнаяЧастьСтрока.ЗаписьКлиента.Услуги
Процедура выполнитьДвижениеЗаказыКлиентовПриход(Знач услуга)
    движение = создатьДвижениеЗаказыКлиентовПриход();
    движение.Номенклатура = услуга.Номенклатура;
    движение.Количество = услуга.Количество;
    движение.Сумма = услуга.Сумма;
КонецПроцедуры

Процедура выполнитьДвижениеЖурналЗаписейКлиентов()
    движение = Движения.ЖурналЗаписейКлиентов.Добавить();
    движение.Период = ЭтотОбъект.Дата;
    движение.ЗаписьКлиента = ЭтотОбъект.Ссылка;
    движение.Клиент = ЭтотОбъект.Клиент;
    движение.Сотрудник = ЭтотОбъект.Сотрудник;
    движение.ДатаЗаписи = ЭтотОбъект.ДатаЗаписи;
    движение.ДатаОкончания = ЭтотОбъект.ДатаОкончанияЗаписи;
    движение.Статус = Перечисления.СтатусЗаписиКлинта.Активна;
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
