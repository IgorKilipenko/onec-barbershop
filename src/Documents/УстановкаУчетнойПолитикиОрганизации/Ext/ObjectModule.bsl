#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(_, __)
	Движения.УчетнаяПолитика.Записывать = Истина;
	выполнитьДвижениеПоУчетнаяПолитика();

	Если УчетнаяПолитика = Перечисления.ВидыУчетнойПолитики.ПоСредней Тогда
		Движения.ТоварыНаСкладах.Записывать = Истина;
		выполнитьВсеДвиженияПоСкладам();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

#Область Движения
Процедура выполнитьДвижениеПоУчетнаяПолитика()
	движение = Движения.УчетнаяПолитика.Добавить();
	движение.Период = Дата;
	движение.УчетнаяПолитика = УчетнаяПолитика;
КонецПроцедуры

Функция создатьДвижениеПоСкладам(Знач период, Знач видДвижения = Неопределено)
	видДвижения = ?(видДвижения = Неопределено, ВидДвиженияНакопления.Приход, видДвижения);
	движение = Движения.ТоварыНаСкладах.Добавить();
	движение.ВидДвижения = видДвижения;
	движение.Период = период;
	
	Возврат движение;
КонецФункции

Процедура выполнитьДвижениеПоСкладам(строкаОстатки)
	движение = создатьДвижениеПоСкладам(Дата, ВидДвиженияНакопления.Расход);
	ЗаполнитьЗначенияСвойств(движение, строкаОстатки);

	движение = создатьДвижениеПоСкладам(Дата, ВидДвиженияНакопления.Приход);
	ЗаполнитьЗначенияСвойств(движение, строкаОстатки, , "СрокГодности");
КонецПроцедуры

Процедура выполнитьВсеДвиженияПоСкладам()
	блокировка = создатьБлокировкуТоваровНаСкладах();
	блокировка.Заблокировать();

	выборкаОстатки = получитьВыборкуОстаткиНаСкладах();
	Пока выборкаОстатки.Следующий() Цикл
		выполнитьДвижениеПоСкладам(выборкаОстатки);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти // Движения

Функция получитьВыборкуОстаткиНаСкладах()
	запросОстатков = Новый Запрос;
	запросОстатков.УстановитьПараметр("МоментИтогов", Новый Граница(МоментВремени()));

	запросОстатков.Текст =
		"ВЫБРАТЬ
		|    ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|    ТоварыНаСкладахОстатки.Склад КАК Склад,
		|    ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
		|    ТоварыНаСкладахОстатки.КоличествоОстаток КАК Количество,
		|    ТоварыНаСкладахОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|    РегистрНакопления.ТоварыНаСкладах.Остатки(&МоментИтогов) КАК ТоварыНаСкладахОстатки";

	Возврат запросОстатков.Выполнить().Выбрать();
КонецФункции

Функция создатьБлокировкуТоваровНаСкладах()
	блокировка = Новый БлокировкаДанных;
	элементБлокировки = блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	элементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Возврат блокировка;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
