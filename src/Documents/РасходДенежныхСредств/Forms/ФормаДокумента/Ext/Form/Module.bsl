#Область ОписаниеПеременных

// Хранит каш значений ВидыОперацийРасходаДенег (Только для чтения).\
// Получать доступ через функцию: {получитьВидыОперацийРасходаДенег}
&НаКлиенте
Перем __ВидыОперацийРасходаДенег;

// Используется как временное хранилище значения поля Получатель
&НаКлиенте
Перем _ПолучательБуфер;

// Используется как временное хранилище значения поля ВидОперации
&НаКлиенте
Перем _ВидОперацииБуфер;

#КонецОбласти // ОпределениеПеременных

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(_, __)
	__ВидыОперацийРасходаДенег = получитьВидыОперацийРасходаДенегНаСервере();
	заполнитьРеквизитыФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(_)
	установитьВидимостьПолейФормы();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(_)
	показатьЗапросПользователюНаОчисткуПолейФормы("ВидОперации");
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	показатьЗапросПользователюНаОчисткуПолейФормы("Получатель");
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура показатьЗапросПользователюНаОчисткуПолейФормы(Знач имяРеквизита)
	Если имяРеквизита = "ВидОперации" Тогда
		показатьЗапросПользователюНаОчисткуПолейФормы_ПриИзмененииВидОперации();
	ИначеЕсли имяРеквизита = "Получатель" Тогда
		показатьЗапросПользователюНаОчисткуПолейФормы_ПриИзмененииПолучатель();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция получитьВидыОперацийРасходаДенегНаСервере()
	Возврат РаботаСДокументами.ПолучитьВидыОперацийРасходаДенег();
КонецФункции

&НаКлиенте
Функция получитьВидыОперацийРасходаДенег()
	видыОперацийРасходаДенег = ?(__ВидыОперацийРасходаДенег = Неопределено,
			получитьВидыОперацийРасходаДенегНаСервере(), __ВидыОперацийРасходаДенег);
	Возврат видыОперацийРасходаДенег;
КонецФункции

&НаКлиенте
Процедура установитьВидимостьПолейФормы()
	видыОперацийРасходаДенег_ = получитьВидыОперацийРасходаДенег();

	типПолучателя_ = Неопределено;
	Если Объект.ВидОперации = видыОперацийРасходаДенег_.ПрочийРасход Тогда
		Элементы.ДоговорКонтрагента.Видимость = Ложь;
		Элементы.Получатель.Видимость = Ложь;

	ИначеЕсли Объект.ВидОперации = видыОперацийРасходаДенег_.ВыдачаДенегПодотчетнику Тогда
		Элементы.ДоговорКонтрагента.Видимость = Ложь;
		Элементы.Получатель.Видимость = Истина;
		типПолучателя_ = Тип("СправочникСсылка.Сотрудники");

	ИначеЕсли Объект.ВидОперации = видыОперацийРасходаДенег_.ВзносНаличнымиВБанк Тогда
		Элементы.ДоговорКонтрагента.Видимость = Ложь;
		Элементы.Получатель.Видимость = Истина;
		типПолучателя_ = Тип("СправочникСсылка.Банки");

	ИначеЕсли Объект.ВидОперации = видыОперацийРасходаДенег_.ОплатаПоставщику
		ИЛИ Объект.ВидОперации = видыОперацийРасходаДенег_.ВозвратДенегПокупателю Тогда

		типПолучателя_ = Тип("СправочникСсылка.Контрагенты");

	Иначе
		Элементы.ДоговорКонтрагента.Видимость = Истина;
		Элементы.Получатель.Видимость = Истина;
	КонецЕсли;

	Если типПолучателя_ <> Неопределено Тогда
		массивОграничений = Новый Массив();
		массивОграничений.Добавить(типПолучателя_);

		описаниеТипаПолучателя = Новый ОписаниеТипов(массивОграничений);
		Элементы.Получатель.ОграничениеТипа = описаниеТипаПолучателя;
	КонецЕсли;

	Если Элементы.ДоговорКонтрагента.Видимость = Истина
		И ЗначениеЗаполнено(Объект.Получатель) Тогда
		Элементы.ДоговорКонтрагента.Видимость = определитьВидимостьПоляДоговорКонтрагента(Объект.Получатель);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция определитьВидимостьПоляДоговорКонтрагента(Знач получательСсылка)
	Возврат НЕ этоКлиент(получательСсылка);
КонецФункции

&НаСервереБезКонтекста
Функция этоКлиент(Знач получательСсылка)
	Возврат РаботаСДокументами.ЭтоКлиент(получательСсылка);
КонецФункции

&НаСервере
Процедура заполнитьРеквизитыФормы()
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ВозвратДенегПокупателю;
	КонецЕсли;

	_ПолучательБуфер = Объект.Получатель;
	_ВидОперацииБуфер = Объект.ВидОперации;
КонецПроцедуры

// Выполняет очистку ранее заполненных значений полей формы
//
// Параметры:
//	поляДляОчистки - Массив - Массив имен полей (реквизитов) для очистки
&НаКлиенте
Процедура очиститьНеиспользуемыеРеквизитыФормы(поляДляОчистки)
	Для Каждого имяРеквизита Из поляДляОчистки Цикл
		Объект[имяРеквизита] = Неопределено;
	КонецЦикла;
	установитьВидимостьПолейФормы();
КонецПроцедуры

&НаКлиенте
Функция сформироватьТекстЗапросаОчисткиПолей(Знач имяРеквизита, массивОчищаемыхРеквизитов) // => Строка | Неопределено
	Если массивОчищаемыхРеквизитов = Неопределено ИЛИ массивОчищаемыхРеквизитов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;

	текстВопроса_ = СтрШаблон("При изменении реквизита ""%1"" будут очищены следующие данные:", имяРеквизита);

	Для Каждого поле Из массивОчищаемыхРеквизитов Цикл
		текстВопроса_ = текстВопроса_ + "
			| - %1";

		текстВопроса_ = СтрШаблон(текстВопроса_, поле);
	КонецЦикла;

	Если ЗначениеЗаполнено(массивОчищаемыхРеквизитов) Тогда
		текстВопроса_ = текстВопроса_ + "
			| Продолжить?";
	Иначе
		текстВопроса_ = Неопределено;
	КонецЕсли;

	Возврат текстВопроса_;
КонецФункции

// Открывает форму диалогового окна для подтверждения очистки ранее заполненных значений полей формы.\
// Вызывается при изменении значения поля формы: ВидОперации
&НаКлиенте
Процедура показатьЗапросПользователюНаОчисткуПолейФормы_ПриИзмененииВидОперации()
	имяРеквизита = "ВидОперации";
	массивОчищаемыхРеквизитов = Новый Массив;
	текстВопроса = Неопределено;

	видыОперацийРасходаДенег_ = получитьВидыОперацийРасходаДенег();
	одноИзОчищаемыхПолейЗаполнено = ЗначениеЗаполнено(Объект.Получатель) ИЛИ ЗначениеЗаполнено(Объект.ДоговорКонтрагента);

	Если (одноИзОчищаемыхПолейЗаполнено) Тогда
		Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) И Объект.ВидОперации = видыОперацийРасходаДенег_.ПрочийРасход Тогда
			массивОчищаемыхРеквизитов.Добавить("ДоговорКонтрагента");
		КонецЕсли;

		Если ЗначениеЗаполнено(Объект.Получатель)
			И (Объект.ВидОперации = видыОперацийРасходаДенег_.ВыдачаДенегПодотчетнику
				ИЛИ Объект.ВидОперации = видыОперацийРасходаДенег_.ВзносНаличнымиВБанк) Тогда

			массивОчищаемыхРеквизитов.Добавить("Получатель");
		КонецЕсли;
	КонецЕсли;

	текстВопроса = сформироватьТекстЗапросаОчисткиПолей(имяРеквизита, массивОчищаемыхРеквизитов);

	Если текстВопроса <> Неопределено Тогда
		оповещение = Новый ОписаниеОповещения("_приЗапросеНаИзменениеВидОперации_ОВ", ЭтотОбъект, массивОчищаемыхРеквизитов);
		ПоказатьВопрос(оповещение, текстВопроса, РежимДиалогаВопрос.ДаНет, , , "Внимание!");
	Иначе
		_ВидОперацииБуфер = Объект.ВидОперации;
		установитьВидимостьПолейФормы();
		Возврат; // Оповещение пользователю не показываем
	КонецЕсли;
КонецПроцедуры

// Открывает форму диалогового окна для подтверждения очистки ранее заполненных значений полей формы.\
// Вызывается при изменении значения поля формы: Получатель
&НаКлиенте
Процедура показатьЗапросПользователюНаОчисткуПолейФормы_ПриИзмененииПолучатель()
	имяРеквизита = "Получатель";
	массивОчищаемыхРеквизитов = Новый Массив;
	текстВопроса = Неопределено;

	этоПоставщик = НЕ этоКлиент(Объект.Получатель);
	массивОчищаемыхРеквизитов = Новый Массив;

	Если этоПоставщик И ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		массивОчищаемыхРеквизитов.Добавить("ДоговорКонтрагента");
	КонецЕсли;

	текстВопроса = сформироватьТекстЗапросаОчисткиПолей(имяРеквизита, массивОчищаемыхРеквизитов);

	Если текстВопроса <> Неопределено Тогда
		оповещение = Новый ОписаниеОповещения("_приЗапросеНаИзменениеПолучатель_ОВ", ЭтотОбъект, массивОчищаемыхРеквизитов);
		ПоказатьВопрос(оповещение, текстВопроса, РежимДиалогаВопрос.ДаНет, , , "Внимание!");
	Иначе
		_ПолучательБуфер = Объект.Получатель;
		установитьВидимостьПолейФормы();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийДиалоговФормы
// Функция обратного вызова.\
// Вызывается после закрытия диалогового окна с запросом подтверждения очистки неиспользуемых полей
// при изменении значения поля формы: ВидОперации
//
// Параметры:
//	кодВозврата - КодВозвратаДиалога
//	поляДляОчистки - Массив - Массив имен полей которые должны быть очищены
&НаКлиенте
Процедура _приЗапросеНаИзменениеВидОперации_ОВ(Знач кодВозврата, поляДляОчистки) Экспорт
	Если кодВозврата = КодВозвратаДиалога.Да Тогда
		очиститьНеиспользуемыеРеквизитыФормы(поляДляОчистки);
		_ВидОперацииБуфер = Объект.ВидОперации;
	Иначе
		Объект.ВидОперации = _ВидОперацииБуфер;
	КонецЕсли;
КонецПроцедуры

// Функция обратного вызова.\
// Вызывается после закрытия диалогового окна с запросом подтверждения очистки неиспользуемых полей
// при изменении значения поля формы: Получатель
//
// Параметры:
//	кодВозврата - КодВозвратаДиалога
//	поляДляОчистки - Массив - Массив имен полей которые должны быть очищены
&НаКлиенте
Процедура _приЗапросеНаИзменениеПолучатель_ОВ(Знач кодВозврата, поляДляОчистки) Экспорт
	Если кодВозврата = КодВозвратаДиалога.Да Тогда
		очиститьНеиспользуемыеРеквизитыФормы(поляДляОчистки);
		_ПолучательБуфер = Объект.Получатель;
	Иначе
		Объект.Получатель = _ПолучательБуфер;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти // ФункцииОбратногоВызова

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
