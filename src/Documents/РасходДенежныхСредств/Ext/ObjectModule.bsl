#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(данныеЗаполнения, __, ___)
    заполнитьДокументНаОсновании(данныеЗаполнения);
    РаботаСДокументами.ЗаполнитьПолеАвторДокументаНаСервере(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(отказ, __)
    результатДвижения = выполнитьДвижениеДенежныеСредстваРасход();
    Если результатДвижения.Отказ Тогда
        Для Каждого описаниеОшибки Из результатДвижения.ОписанияОшибок Цикл
            сообщение = Новый СообщениеПользователю;
            сообщение.Текст = описаниеОшибки.Сообщение;
            сообщение.Поле = описаниеОшибки.Поле;
            сообщение.УстановитьДанные(ЭтотОбъект);
            сообщение.Сообщить();
        КонецЦикла;
        отказ = Истина;
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  данныеЗаполнения - ДокументСсылка.ПоступлениеУслуг, ДокументСсылка.ПоступлениеТоваров
//  - ДокументСсылка.РеализацияТоваровИУслуг, Неопределено - Ссылка на документ основание
//
// Возвращаемое значение:
//  - Булево
Функция заполнитьДокументНаОсновании(Знач данныеЗаполнения)
    Если данныеЗаполнения = Неопределено Тогда
        Возврат Ложь;
    КонецЕсли;

    // Если тип документа основания не соответствует ожидаемым типам
    типДокументаОСнования = ТипЗнч(данныеЗаполнения);
    Если НЕ (типДокументаОСнования = Тип("ДокументСсылка.ПоступлениеУслуг")
            ИЛИ типДокументаОСнования = Тип("ДокументСсылка.ПоступлениеТоваровИМатериалов")
            ИЛИ типДокументаОСнования = Тип("ДокументСсылка.РеализацияТоваровИУслуг")) Тогда

        Возврат Ложь;
    КонецЕсли;

    ДокументОснование = данныеЗаполнения.Ссылка;
    СуммаДокумента = данныеЗаполнения.СуммаДокумента;
    Касса = Справочники.Кассы.ПолучитьОсновнуюКассу();

    Если типДокументаОСнования = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
        ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ВозвратДенегПокупателю;
        Получатель = данныеЗаполнения.Клиент;

    Иначе // Это Поступление Товаров или Услуг
        ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
        Получатель = данныеЗаполнения.Поставщик;
        ДоговорКонтрагента = данныеЗаполнения.ДоговорПоставщика;
    КонецЕсли;

    Возврат Истина;
КонецФункции

Функция выполнитьДвижениеДенежныеСредстваРасход()
    результат = Новый Структура("Отказ, ОписанияОшибок", Ложь, Новый Массив);
    движение = Движения.ДенежныеСредства.Добавить();
    движение.ВидДвижения = ВидДвиженияНакопления.Расход;
    движение.Период = Дата;
    движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные;
    движение.БанковскийСчетКасса = Касса;
    движение.Сумма = СуммаДокумента;

    Движения.ДенежныеСредства.БлокироватьДляИзменения = Истина;
    Движения.ДенежныеСредства.Записывать = Истина;
    Движения.Записать();

    // Контроль остатков ДС
    остатокДС = получитьОстатокДенежныхСредствПоКассе(Касса);
    Если остатокДС = Неопределено ИЛИ остатокДС.Сумма < 0 Тогда
        форматФинансовыхДанных = "ЧДЦ=2; ЧРГ= ; ЧН=0.00";
        результат.Отказ = Истина;
        результат.ОписанияОшибок.Добавить(Новый Структура("Сообщение, Поле",
                СтрШаблон(
                    "По Кассе ""%1"" недостаточно денежных средств для списания в размере: %2.
                    |Текущий остаток на кассе: %3.",
                    остатокДС.Касса,
                    Формат(-остатокДС.Сумма, форматФинансовыхДанных),
                    Формат(СуммаДокумента + остатокДС.Сумма, форматФинансовыхДанных)), "СуммаДокумента"));
    КонецЕсли;

    Возврат результат;
КонецФункции

// Параметры:
//	касса - СправочникСсылка.Кассы
//
// Возвращаемое значение:
//	- Структура - Структура вида: { Касса: Строка, Сумма: Число }
//  - Неопределено - Если в РегистрНакопления.ДенежныеСредства нет записи с указанным значением кассы
Функция получитьОстатокДенежныхСредствПоКассе(Знач касса)
    запросОстаткиДС = Новый Запрос;
    запросОстаткиДС.УстановитьПараметр("Касса", касса);
    запросОстаткиДС.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));

    запросОстаткиДС.Текст =
        "ВЫБРАТЬ
        |	ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК Касса,
        |	ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
        |ИЗ
        |	РегистрНакопления.ДенежныеСредства.Остатки(
        |		&МоментВремени,
        |		БанковскийСчетКасса = &Касса
        |			И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)) КАК ДенежныеСредстваОстатки
        |";

    результатЗапроса = запросОстаткиДС.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    результат = Новый Структура("Касса, Сумма");
    выборка = результатЗапроса.Выбрать();
    выборка.Следующий();
    ЗаполнитьЗначенияСвойств(результат, выборка);
    Возврат выборка;
КонецФункции

#КонецОбласти
