#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	РаботаСДокументами.ЗаполнитьПолеАвторДокументаНаСервере(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(отказ, __)
	выполнитьВсеДвиженияДенежныеСредстваРасход(отказ, Истина, Истина);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

Процедура выполнитьДвижениеДенежныеСредстваРасход(строкаРасходДС)
	движение = Движения.ДенежныеСредства.ДобавитьРасход();
	ЗаполнитьЗначенияСвойств(движение, строкаРасходДС);
КонецПроцедуры

Процедура выполнитьВсеДвиженияДенежныеСредстваРасход(отказ, Знач записывать = Истина, Знач контролироватьОстатки = Истина)
	выборкаРасходДС = получитьВыборкуДокументРасходДенежныхСредств(Ссылка);
	Если выборкаРасходДС = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Пока выборкаРасходДС.Следующий() Цикл
		выполнитьДвижениеДенежныеСредстваРасход(выборкаРасходДС);
	КонецЦикла;

	Если записывать Тогда
		Движения.ДенежныеСредства.Записывать = Истина;
		Движения.ДенежныеСредства.БлокироватьДляИзменения = Истина;

		Движения.Записать();
	КонецЕсли;

	Если контролироватьОстатки Тогда
		остаток = проверитьОстаткиДенежныхСредствПоКассе(ЭтотОбъект.Касса);

		Если остаток <> Неопределено Тогда
			отказ = Истина;
			сообщениеПользователю = Новый СообщениеПользователю;
			сообщениеПользователю.Текст =
				СтрШаблон("По кассе ""%1"" недостаточно денежных средств для расхода в размере %2", остаток.Касса, остаток.Сумма);
			сообщениеПользователю.Сообщить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция получитьВыборкуДокументРасходДенежныхСредств(документСсылка) // => Выборка | Неопределено
	запросРасходДС = Новый Запрос;
	запросРасходДС.УстановитьПараметр("Ссылка", документСсылка);

	запросРасходДС.Текст =
		"ВЫБРАТЬ
		|	РасходДенежныхСредств.Дата КАК Период,
		|	РасходДенежныхСредств.Касса КАК БанковскийСчетКасса,
		|	РасходДенежныхСредств.СуммаДокумента КАК Сумма,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств
		|ИЗ
		|	Документ.РасходДенежныхСредств КАК РасходДенежныхСредств
		|ГДЕ
		|	РасходДенежныхСредств.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходДенежныхСредств.Дата,
		|	РасходДенежныхСредств.Касса,
		|	РасходДенежныхСредств.СуммаДокумента
		|";

	результатЗапроса = запросРасходДС.Выполнить();
	Если результатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат результатЗапроса.Выбрать();
КонецФункции

// Выполняет поиск строки в {РегистреНакопления.ДенежныеСредства.Остатки}\
// с отрицательным значение поля СуммаОстаток по у казанной кассе.
// В случае если строка найдена - возвращает в виде { Касса: Строка, Сумма: Число }, иначе Неопределено
//
// Параметры:
//	касса - СправочникСсылка.Кассы
//
// Возвращаемое значение:
//	- Структура
//	- Неопределено
Функция проверитьОстаткиДенежныхСредствПоКассе(касса = Неопределено) // => { Касса: Строка, Сумма: Число } | Неопределено
	касса = ?(касса = Неопределено, ЭтотОбъект.Касса, касса);

	запросОстаткиДС = Новый Запрос;
	запросОстаткиДС.УстановитьПараметр("Касса", касса);
	запросОстаткиДС.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));

	запросОстаткиДС.Текст =
		"ВЫБРАТЬ
		|	ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК Касса,
		|	ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ДенежныеСредства.Остатки(
		|		&МоментВремени,
		|		БанковскийСчетКасса = &Касса
		|			И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)) КАК ДенежныеСредстваОстатки
		|ГДЕ
		|	ДенежныеСредстваОстатки.СуммаОстаток < 0
		|";

	результатЗапроса = запросОстаткиДС.Выполнить();
	Если результатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат результатЗапроса.Выбрать().Следующий();
КонецФункции

#КонецОбласти
