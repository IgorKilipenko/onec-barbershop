#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(_, __)
	заполнитьРеквизитыФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(_)
	установитьВидимостьПолейФормы();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипДенежныхСредствПриИзменении(_)
	показатьЗапросПользователюНаОчисткуПолейФормы("_приИзмененииТипаДенежныхСредств_ОВ");
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура заполнитьРеквизитыФормы()
	этоНовыйОбъект = Объект.Ссылка.Пустая();

	ЭтаФорма.Плательщик = Объект.Плательщик;
	ЭтаФорма.ТипДенежныхСредств = ?(этоНовыйОбъект,
			Перечисления.ТипыДенежныхСредств.Наличные, Объект.ТипДенежныхСредств);
	ЭтаФорма.ВидОперации = ?(этоНовыйОбъект,
			Перечисления.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя, Объект.ВидОперации);
КонецПроцедуры

&НаКлиенте
Процедура установитьВидимостьПолейФормы()
	строкаТипПлательщика = получитьПредставлениеТипаПлательщика();

	Если Объект.ТипДенежныхСредств = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Наличные") Тогда
		Элементы.Касса.Видимость = Истина;
		Элементы.ЭквайринговыйТерминал.Видимость = Ложь;
	ИначеЕсли Объект.ТипДенежныхСредств = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Безналичные") Тогда
		Элементы.Касса.Видимость = Ложь;
		Элементы.ЭквайринговыйТерминал.Видимость = Истина;
	КонецЕсли;

	Если строкаТипПлательщика = Неопределено Тогда
		Элементы.Плательщик.Видимость = Ложь;
		Элементы.ДоговорКонтрагента.Видимость = Ложь;
		Элементы.Касса.Видимость = Истина;
		Элементы.ЭквайринговыйТерминал.Видимость = Ложь;
	Иначе
		этотПлательщикКонтрагент = НЕ (строкаТипПлательщика = "СправочникСсылка.Сотрудники" ИЛИ строкаТипПлательщика = "СправочникСсылка.Банки");
		Если этотПлательщикКонтрагент Тогда
			Элементы.ДоговорКонтрагента.Видимость = Истина;
			Элементы.Плательщик.Видимость = Истина;
		Иначе
			Элементы.ДоговорКонтрагента.Видимость = Ложь;
			Элементы.Плательщик.Видимость = Истина;
			Элементы.Касса.Видимость = Истина;
			Элементы.ЭквайринговыйТерминал.Видимость = Ложь;
		КонецЕсли;

		Массив = Новый Массив();
		Массив.Добавить(Тип(строкаТипПлательщика));
		описаниеТипаПлательщика = Новый ОписаниеТипов(Массив);
		Элементы.Плательщик.ОграничениеТипа = описаниеТипаПлательщика;
	КонецЕсли;

	Если Элементы.ДоговорКонтрагента.Видимость = Истина
		И ЗначениеЗаполнено(Объект.Плательщик) Тогда
		Элементы.ДоговорКонтрагента.Видимость = НЕ этоКлиент(Объект.Плательщик);
	КонецЕсли;

КонецПроцедуры

// Возвращаемое значение:
//	- Строка
//	- Неопределено
&НаКлиенте
Функция получитьПредставлениеТипаПлательщика() // => Строка | Неопределено
	строкаТипПлательщика = Неопределено;
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступленияДенег.ПрочееПоступление") Тогда
		Возврат строкаТипПлательщика;
	КонецЕсли;

	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступленияДенег.ВозвратОтПодотчетника") Тогда
		строкаТипПлательщика = "СправочникСсылка.Сотрудники";
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступленияДенег.ПолучениеНаличныхВБанке") Тогда
		строкаТипПлательщика = "СправочникСсылка.Банки";
	Иначе
		строкаТипПлательщика = "СправочникСсылка.Контрагенты";
	КонецЕсли;

	Возврат строкаТипПлательщика;
КонецФункции

// Параметры:
//	плательщикСсылка - СправочникСсылка.Контрагенты
//
// Возвращаемое значение:
//	- Булево
&НаСервереБезКонтекста
Функция этоКлиент(Знач плательщикСсылка) // => Булево

	Если ТипЗнч(плательщикСсылка) <> Тип("СправочникСсылка.Контрагенты") Тогда
		Возврат Ложь;
	КонецЕсли;

	запросКонтрагента = Новый Запрос;
	запросКонтрагента.УстановитьПараметр("ПлательщикСсылка", плательщикСсылка);

	запросКонтрагента.Текст =
		"ВЫБРАТЬ
		|	Контрагенты.ТипКонтрагента КАК ТипКонтрагента,
		|	Контрагенты.Ссылка КАК Контрагент
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Ссылка = &ПлательщикСсылка
		|";

	выборка = запросКонтрагента.Выполнить().Выбрать();
	выборка.Следующий();

	Если ЗначениеЗаполнено(выборка.ТипКонтрагента)
		И выборка.ТипКонтрагента = Перечисления.ТипыКонтрагентов.Клиент Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция этоОплатаНаличными() // => Булево
	Возврат Объект.ТипДенежныхСредств = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Наличные");
КонецФункции

&НаКлиенте
Функция этоОплатаБезналичными() // => Булево
	Возврат Объект.ТипДенежныхСредств = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Безналичные");
КонецФункции

&НаКлиенте
Процедура показатьЗапросПользователюНаОчисткуПолейФормы(обратныйВызов = "_приИзмененииТипаДенежныхСредств_ОВ")
	массивОчищаемыхРеквизитов = Новый Массив;
	текстЗапроса = "При изменении реквизита ""Тип денежных средств"" будут очищены следующие данные:
		| - %1
		| Продолжить?";

	Если этоОплатаНаличными()
		И ЗначениеЗаполнено(Объект.ЭквайринговыйТерминал) Тогда
		массивОчищаемыхРеквизитов.Добавить("ЭквайринговыйТерминал");
		текстЗапроса = СтрШаблон(текстЗапроса, "Эквайринговый терминал");

	ИначеЕсли этоОплатаБезналичными()
		И ЗначениеЗаполнено(Объект.Касса) Тогда
		массивОчищаемыхРеквизитов.Добавить("Касса");
		текстЗапроса = СтрШаблон(текстЗапроса, "Касса");

	КонецЕсли;

	Если ЗначениеЗаполнено(массивОчищаемыхРеквизитов) Тогда
		Оповещение = Новый ОписаниеОповещения(обратныйВызов, ЭтаФорма, массивОчищаемыхРеквизитов);
		ПоказатьВопрос(Оповещение, текстЗапроса, РежимДиалогаВопрос.ДаНет, , , "Внимание!");
	Иначе
		ЭтаФорма.ТипДенежныхСредств = Объект.ТипДенежныхСредств;
		установитьВидимостьПолейФормы();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#Область СлужебныйПрограммныйИнтерфейс

#Область ФункцииОбратногоВызова
&НаКлиенте
Процедура _приИзмененииТипаДенежныхСредств_ОВ(Знач кодВозврата, поляДляОчистки) Экспорт
	Если кодВозврата = КодВозвратаДиалога.Да Тогда
		Для Каждого Реквизит Из поляДляОчистки Цикл
			Объект[Реквизит] = Неопределено;
		КонецЦикла;
		установитьВидимостьПолейФормы();
		ТипДенежныхСредств = Объект.ТипДенежныхСредств;
	Иначе
		Объект.ТипДенежныхСредств = ТипДенежныхСредств;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти // ФункцииОбратногоВызова

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
