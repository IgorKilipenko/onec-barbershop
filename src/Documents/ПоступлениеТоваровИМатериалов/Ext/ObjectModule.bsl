#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(_, __)
	отражатьСрокиГодности = получитьУчетнуюПолитику() = Перечисления.ВидыУчетнойПолитики.FEFO;

	Движения.ЦеныНоменклатурыПоставщиков.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записывать = Истина;

	выборкаИтогиТовары = получитьВыборкуИтогиТовары();

	Пока выборкаИтогиТовары.Следующий() Цикл
		выполнитьДвижениеЦеныНоменклатурыПоставщиков(выборкаИтогиТовары);

		выборкаТовары = выборкаИтогиТовары.Выбрать();
		Пока выборкаТовары.Следующий() Цикл
			выполнитьДвижениеТоварыНаСкладах(выборкаТовары, отражатьСрокиГодности);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(отказ, __, ___)
	Если ОбменДанными.Загрузка ИЛИ отказ Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(АвторДокумента) Тогда
		АвторДокумента = ?(ЗначениеЗаполнено(АвторДокумента), АвторДокумента, ПараметрыСеанса.ТекущийПользователь);
		СуммаДокумента = Товары.Итог("Сумма");
	КонецЕсли;
КонецПроцедуры
#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

#Область Движения
Процедура выполнитьДвижениеЦеныНоменклатурыПоставщиков(текСтрокаТовары)
	движение = Движения.ЦеныНоменклатурыПоставщиков.Добавить();
	движение.Период = Дата;
	движение.Номенклатура = текСтрокаТовары.Номенклатура;
	движение.Поставщик = Поставщик;
	движение.Цена = текСтрокаТовары.Цена;
КонецПроцедуры

Процедура выполнитьДвижениеТоварыНаСкладах(текСтрокаТовары, Знач отражатьСрокиГодности = Ложь)
	движение = Движения.ТоварыНаСкладах.Добавить();
	движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	движение.Период = Дата;
	движение.Номенклатура = текСтрокаТовары.Номенклатура;
	движение.Склад = Склад;
	движение.Количество = текСтрокаТовары.Количество;
	движение.Сумма = текСтрокаТовары.Сумма;
	Если отражатьСрокиГодности Тогда
		движение.СрокГодности = текСтрокаТовары.СрокГодности;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти // Движения

Функция получитьВыборкуИтогиТовары()
	запросТовары = Новый Запрос;
	запросТовары.УстановитьПараметр("Ссылка", Ссылка);

	запросТовары.Текст =
		"ВЫБРАТЬ
		|    ПоступлениеТоваровИМатериаловТовары.Номенклатура КАК Номенклатура,
		|    ПоступлениеТоваровИМатериаловТовары.Цена КАК Цена,
		|    СУММА(ПоступлениеТоваровИМатериаловТовары.Количество) КАК Количество,
		|    СУММА(ПоступлениеТоваровИМатериаловТовары.Сумма) КАК Сумма,
		|    ПоступлениеТоваровИМатериаловТовары.СрокГодности КАК СрокГодности
		|ИЗ
		|    Документ.ПоступлениеТоваровИМатериалов.Товары КАК ПоступлениеТоваровИМатериаловТовары
		|ГДЕ
		|    ПоступлениеТоваровИМатериаловТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|    ПоступлениеТоваровИМатериаловТовары.Номенклатура,
		|    ПоступлениеТоваровИМатериаловТовары.Цена,
		|    ПоступлениеТоваровИМатериаловТовары.СрокГодности
		|ИТОГИ
		|    МАКСИМУМ(Цена)
		|ПО
		|    Номенклатура";

	Возврат запросТовары.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
КонецФункции

Функция получитьУчетнуюПолитику()
	Возврат РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(Дата).УчетнаяПолитика;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
