#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьЦены(_)
    списокНоменклатуры = Новый Массив(Объект.Товары.Количество());
    Для Каждого строкаНоменклатуры Из Объект.Товары Цикл
        Если НЕ ЗначениеЗаполнено(строкаНоменклатуры.Номенклатура) Тогда
            Продолжить;
        КонецЕсли;

        строкаНоменклатуры.Добавить(строкаНоменклатуры.Номенклатура);
    КонецЦикла;

    таблицаЦенНоменклатуры = получитьЦеныДляСпискаНоменклатурыНаСервере(
            списокНоменклатуры,
            Объект.Контрагент,
            ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, Неопределено));

    Если таблицаЦенНоменклатуры = Неопределено Тогда
        Возврат;
    КонецЕсли;

    Для Каждого строкаНоменклатуры Из Объект.Товары Цикл
        Если НЕ ЗначениеЗаполнено(строкаНоменклатуры.Номенклатура) Тогда
            Продолжить;
        КонецЕсли;

        таблицаЦенНоменклатуры.Свойство(строкаНоменклатуры)
    КонецЦикла;
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(_)
    рассчитатьСуммуПоСтрокеТовары();
    обновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(_)
    рассчитатьСуммуПоСтрокеТовары();
    обновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(_)
    обновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(_)
    Если обновитьЦенуНоменклатуры(Элементы.Товары.ТекущиеДанные) Тогда
        рассчитатьСуммуПоСтрокеТовары();
        обновитьСуммуДокумента();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(_)
    ТоварыНоменклатураПриИзменении(Неопределено);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыТовары

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура рассчитатьСуммуПоСтрокеТовары()
    текущСтрокаТовары = Элементы.Товары.ТекущиеДанные;
    текущСтрокаТовары.Сумма = текущСтрокаТовары.Цена * текущСтрокаТовары.Количество;
КонецПроцедуры

&НаКлиенте
Процедура обновитьСуммуДокумента()
    Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Функция обновитьЦенуНоменклатуры(Знач текущСтрокаТовары)
    ценаНоменклатуры = текущСтрокаТовары.Цена;

    Если ЗначениеЗаполнено(текущСтрокаТовары.Номенклатура)
        И ЗначениеЗаполнено(Объект.Поставщик) Тогда

        ценаНоменклатуры = получитьЦенуНоменклатурыНаСервере(
                текущСтрокаТовары.Номенклатура, Объект.Поставщик,
                ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, Неопределено));
    КонецЕсли;

    Если текущСтрокаТовары.Цена = ценаНоменклатуры Тогда
        Возврат Ложь; // Без изменения
    КонецЕсли;

    текущСтрокаТовары.Цена = ценаНоменклатуры;
    Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция получитьЦенуНоменклатурыНаСервере(Знач номенклатураСсылка, Знач поставщикСсылка, Знач дата)
    результат = РегистрыСведений.ЦеныНоменклатурыПоставщиков.ПолучитьЦенуНоменклатуры(
            номенклатураСсылка, поставщикСсылка, дата);

    Возврат ?(результат = Неопределено, 0, результат);
КонецФункции

// Параметры:
//  списокНоменклатуры - Массив, ФиксированныйМассив Из ДокументСсылка.Номенклатура
//  поставщикСсылка - ДокументСсылка.Контрагенты
//  дата - Дата, МоментВремени, Граница, Неопределено
// Возвращаемое значение:
//  - Массив Из Структура - Таблица цен номенклатуры поставщика
//      * Номенклатура - ДокументСсылка.Номенклатура
//      * Цена - Число
//  - Неопределено - Если данные отсутствуют
&НаСервереБезКонтекста
Функция получитьЦеныДляСпискаНоменклатурыНаСервере(Знач списокНоменклатуры, Знач поставщикСсылка, Знач дата)
    таблицаЦенНоменклатуры = РегистрыСведений.ЦеныНоменклатурыПоставщиков.ПолучитьСписокЦенНоменклатуры(
            списокНоменклатуры, поставщикСсылка, дата);

    Если таблицаЦенНоменклатуры = Неопределено Тогда
        Возврат Неопределено;
    КонецЕсли;

    имяКолонкиНоменклатура = "Номенклатура";
    индексКолонкиНоменклатура = таблицаЦенНоменклатуры.Колонки.Найти(имяКолонкиНоменклатура);
    имяКолонкиЦена = "Цена";
    индексКолонкиЦена = таблицаЦенНоменклатуры.Колонки.Найти(имяКолонкиЦена);

    ДиагностикаКлиентСервер.Утверждение(индексКолонкиЦена >= 0 И индексКолонкиНоменклатура >= 0,
        СтрШаблон("Таблица значений цен номенклатуры должна содержать обязательные колонки: [%1, %2].",
            имяКолонкиНоменклатура, имяКолонкиЦена));

    результат = Новый Массив(таблицаЦенНоменклатуры.Количество());
    результатаСтрока_Ключи = СтрШаблон("%1, %2", имяКолонкиНоменклатура, имяКолонкиЦена);
    сч = 0;
    Для Каждого строкаЦенНоменклатуры Из таблицаЦенНоменклатуры Цикл
        новаяСтрокаРезультат = Новый ФиксированнаяСтруктура(
                результатаСтрока_Ключи,
                строкаЦенНоменклатуры.Получить(индексКолонкиНоменклатура),
                строкаЦенНоменклатуры.Получить(индексКолонкиЦена));

        результат.Установить(сч, новаяСтрокаРезультат);

        сч = сч + 1;
    КонецЦикла;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
