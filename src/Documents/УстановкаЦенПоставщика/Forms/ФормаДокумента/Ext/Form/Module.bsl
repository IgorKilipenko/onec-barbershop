#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(имяСобытия, параметрыСобытия, ___)
    Если имяСобытия <> "ЗаписьПрайсЛистаВДокумент" Тогда
        Возврат;
    КонецЕсли;

    загрузчик = Неопределено;
    параметрыСобытия.Свойство("Объект", загрузчик);

    ДиагностикаКлиентСервер.Утверждение(загрузчик <> Неопределено);

    Объект.Товары.Очистить();
    заполнитьТаблицуТоваровНаСервере(загрузчик.ПрайсЛист);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьПрайсЛист(_)
    имяФормыЗагрузчика = СтрШаблон("%1.%2", "Обработка.ЗагрузкаПрайсЛиста", "Форма");
    форма = ОткрытьФорму(
            имяФормыЗагрузчика, Новый Структура("ИмяДокументаОснования, Дата, Контрагент",
                "УстановкаЦенПоставщика", Объект.Дата, Объект.Контрагент),
            ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция получитьТаблицуЗначенийИзТабличногоДокументаНаСервере(Знач табДокПрайсЛиста)

    таблицаПрайсЛиста = Новый ТаблицаЗначений;

    таблицаПрайсЛиста.Колонки.Добавить("АртикулНоменклатуры", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(13)));
    таблицаПрайсЛиста.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));

    количествоСтрок = табДокПрайсЛиста.ВысотаТаблицы;
    Если количествоСтрок = 0 Тогда
        Возврат таблицаПрайсЛиста;
    КонецЕсли;

    содержитАртикул = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(
            табДокПрайсЛиста.ПолучитьОбласть("R1C1").ТекущаяОбласть.Текст, "\.*[Аа]ртикул\.*");
    содержитЦену = РаботаСоСтрокамиВызовСервера.ПодобнаПоРегулярномуВыражению(
            табДокПрайсЛиста.ПолучитьОбласть("R1C2").ТекущаяОбласть.Текст, "\.*[Цц]ена\.*");
    содержитШапку = содержитАртикул ИЛИ содержитЦену;

    Для сч = ?(содержитШапку, 2, 1) По количествоСтрок Цикл
        стрНомерСтроки = Формат(сч, "ЧГ=0");
        новаяСтрокаПрайса = таблицаПрайсЛиста.Добавить();

        артикулНоменклатуры = Строка(
                табДокПрайсЛиста.ПолучитьОбласть(СтрШаблон("R%1C1", стрНомерСтроки)).ТекущаяОбласть.Текст);
        ценаНоменклатуры = ПреобразованиеТиповКлиентСервер.ПривестиСтрокуКЧислу(
                табДокПрайсЛиста.ПолучитьОбласть(СтрШаблон("R%1C2", стрНомерСтроки)).ТекущаяОбласть.Текст, Истина);

        Если ценаНоменклатуры = Неопределено Тогда
            ВызватьИсключение СтрШаблон("Ошибка чтения значения цены в строке %1", стрНомерСтроки);
        КонецЕсли;

        новаяСтрокаПрайса.АртикулНоменклатуры = артикулНоменклатуры;
        новаяСтрокаПрайса.Цена = ценаНоменклатуры;
    КонецЦикла;

    Возврат таблицаПрайсЛиста;

КонецФункции

&НаСервере
Функция заполнитьТаблицуТоваровНаСервере(Знач табДокПрайсЛиста)
    прайсДист = Неопределено;
    Попытка
        прайсДист = получитьТаблицуЗначенийИзТабличногоДокументаНаСервере(табДокПрайсЛиста);
    Исключение
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = СтрШаблон(
                "Ошибка чтения данных из прайс-листа.
                |Описание ошибки: %1", ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
        Сообщение.Сообщить();

        Возврат Ложь;
    КонецПопытки;

    запрос = Новый Запрос;
    запрос.Текст =
        "ВЫБРАТЬ
        |    ТаблицаПрайсЛиста.АртикулНоменклатуры КАК Артикул,
        |    ТаблицаПрайсЛиста.Цена КАК Цена
        |ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
        |ИЗ
        |    &ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |    Ном.Ссылка КАК Номенклатура,
        |    ВТ_ТаблицаПрайсЛиста.Цена КАК Цена
        |ИЗ
        |    ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
        |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
        |        ПО ВТ_ТаблицаПрайсЛиста.Артикул = Ном.Артикул
        |";

    запрос.УстановитьПараметр("ТаблицаПрайсЛиста", прайсДист);
    результатВыполненияЗапроса = запрос.Выполнить();
    выборка = результатВыполненияЗапроса.Выбрать();

    Пока выборка.Следующий() Цикл
        новСтрокаТовары = Объект.Товары.Добавить();
        новСтрокаТовары.Номенклатура = выборка.Номенклатура;
        новСтрокаТовары.Цена = выборка.Цена;
    КонецЦикла;

    Возврат Истина;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
